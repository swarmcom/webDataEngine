{
  "identification_schema": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "title": "Id"
      },
      "accountId": {
        "type": "string",
        "title": "Account"
      },
      "serialNumber": {
        "type": "string",
        "title": "Serial number"
      },
      "description": {
        "type": "string",
        "title": "Description"
      },
      "firmwareVersion": {
        "type":"string",
        "title":"Firmware version",
        "enum": [
          "4.1.X",
          "4.1.0",
          "4.1.2",
          "4.1.3",
          "4.1.4",
          "4.1.5",
          "4.1.6",
          "4.1.7",
          "4.1.8",
          "5.0.0",
          "5.0.1",
          "5.0.2",
          "5.1.1",
          "5.1.2",
          "5.1.3",
          "5.2.0",
          "5.2.1",
          "5.2.2",
          "5.2.3",
          "5.3.0",
          "5.3.1",
          "5.4.0",
          "5.4.1",
          "5.4.3"
        ]
      }
    }
  },
  "identification_options": {
    "renderForm":true,
    "helper": "Identification",
    "fields": {
      "description" : {
        "type": "textarea",
        "rows": 5,
        "cols": 40,
        "helper": "Please enter your description."
      },
      "id": {
        "type": "hidden"
      },
      "accountId": {
        "type": "hidden"
      }
    }
  },
  "lines_schema": {
    "type": "object",
    "properties": {
      "lines": {
        "type": "array",
        "title": "Lines"
      }
    }
  },
  "lines_options": {
    "renderForm":true,
    "helper": "Lines",
    "fields": {
    }
  },
  "dateTime_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "dateTimeSettings": {
            "type": "object",
            "properties": {
              "timeFormat": {
                "type": "object",
                "title": "Time Format",
                "properties": {
                  "hourFormat": {
                    "title": "24 Hour Format",
                    "type": "boolean"
                  }
                }
              },
              "dateFormat": {
                "type": "object",
                "title": "Date Format",
                "properties": {
                  "format": {
                    "title": "Format",
                    "type": "string"
                  },
                  "dateLongFormat": {
                    "title": "Date Long Format",
                    "type": "boolean"
                  },
                  "dateTop": {
                    "title": "Date Top",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "dateTime_settings_options": {
    "helper": "Date/Time",
    "fields": {
      "settings": {
        "fields": {
          "dateTimeSettings": {
            "toolbarSticky": true,
            "fields": {
              "timeFormat": {
                "fields": {
                  "hourFormat": {
                    "helper": "If checked the time is in the 24h format, otherwise 12h AM/PM format."
                  }
                }
              },
              "dateFormat": {
                "fields": {
                  "format": {
                    "helper": "Controls the format of the date string (D = day of week, d = day of the month, M = month), e.g. D,dM = \"Thursday, 3 July\" or \"Md,D = July 3, Thursday\". The field may contain 0, 1 or 2 commas, which can occur only between characters and only one at a time i.e. 'D,,dM' is illegal."
                  },
                  "dateLongFormat": {
                    "helper": "If checked, display the day and month in long format (Friday/November). Otherwise use abbreviations (Fri/Nov)"
                  },
                  "dateTop": {
                    "helper": "If checked, display date above time, else display time above date."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "userPreferences_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "userPreferences": {
            "type": "object",
            "properties": {
              "analogHeadsetOption": {
                "title": "Analog Headset Option",
                "type": "boolean"
              },
              "headsetMode": {
                "title": "Headset Mode",
                "type": "boolean"
              },
              "handsfreeMode": {
                "title": "Handsfree Mode",
                "type": "boolean"
              },
              "useDirectoryNames": {
                "title": "Use Directory Names",
                "type": "boolean"
              },
              "oneTouchVoiceMail": {
                "title": "One Touch Voice Mail",
                "type": "boolean"
              },
              "welcomeSoundEnabled": {
                "title": "Welcome Sound Enabled",
                "type": "boolean"
              },
              "welcomeSoundOnWarmBootEnabled": {
                "title": "Welcome Sound On Warm Boot Enabled",
                "type": "boolean"
              },
              "localClockEnabled": {
                "title": "Local Clock Enabled",
                "type": "boolean"
              },
              "idleTimeout": {
                "title": "Idle Timeout",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "userPreferences_settings_options": {
    "helper": "User Preferences",
    "fields": {
      "settings": {
        "fields": {
          "userPreferences": {
            "toolbarSticky": true,
            "fields": {
              "analogHeadsetOption": {
                "helper": "If checked, an attached DHSG-compatible headset will be used as an electronic hookswitch"
              },
              "headsetMode": {
                "helper": "If checked, the headset will be selected as the preferred transducer after its first use until the headset key is pressed again; otherwise, handsfree will be selected preferentially over the headset."
              },
              "handsfreeMode": {
                "helper": "Leave checked to enable the hands-free speakerphone. If unchecked, the hands-free speakerphone will be disabled."
              },
              "useDirectoryNames": {
                "helper": "If checked, the name fields of directory entries which match incoming calls will be used for caller identification display and in the call lists instead of the name provided via network signaling."
              },
              "oneTouchVoiceMail": {
              },
              "welcomeSoundEnabled": {
                "helper": "If checked, play welcome sound effect after a reboot."
              },
              "welcomeSoundOnWarmBootEnabled": {
                "helper": "If checked, play welcome sound effect on warm as well as cold boots, otherwise only a cold boot will trigger the welcome sound effect."
              },
              "localClockEnabled": {
                "helper": "If checked, display the date and time on the idle display"
              },
              "idleTimeout": {
                "helper": "Timeout for the idle display or default call handling display. If set to 0, there is no timeout. If set to Null, the default timeout of 20 seconds is used. If set to value greater than 0, the timeout is for that number of seconds (maximum 65536)."
              }
            }
          }
        }
      }
    }
  },
  "dtmf_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "dtmf": {
            "type": "object",
            "properties": {
              "level": {
                "title": "Level",
                "type": "string"
              },
              "onTime": {
                "title": "On Time",
                "type": "string"
              },
              "offTime": {
                "title": "Off Time",
                "type": "string"
              },
              "chassisMasking": {
                "title": "Chassis Masking",
                "type": "boolean"
              },
              "viaRtp": {
                "title": "Via Rtp",
                "type": "boolean"
              },
              "rfc2833Control": {
                "title": "RFC 2833 Control",
                "type": "boolean"
              },
              "rfc2833Payload": {
                "title": "RFC 2833 Payload",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "dtmf_settings_options": {
    "helper": "DTMF",
    "fields": {
      "settings": {
        "fields": {
          "dtmf": {
            "toolbarSticky": true,
            "fields": {
              "level": {
                "helper": "Level of the high frequency component of the DTMF digit measured in dBm0; the low frequency tone will be two dB lower."
              },
              "onTime": {
                "helper": "When a sequence of DTMF tones is played out automatically, this is the length of time in milliseconds the tones will be generated for; this is also the minimum time the tone will be played for when dialing manually (even if key press is shorter)."
              },
              "offTime": {
                "helper": "When a sequence of DTMF tones is played out automatically, this is the length of time in milliseconds the phone will pause between digits; this is also the minimum inter-digit time when dialing manually."
              },
              "chassisMasking": {
                "helper": "If checked, DTMF tones will be substituted with a non-DTMF pacifier tone when dialing in hands-free mode. This prevents DTMF digits being broadcast to other surrounding telephony log.device.s or being inadvertently transmitted in-band due to local acoustic echo. Note: tone.dtmf.chassis.masking should only be enabled when tone.dtmf.viaRtp is disabled."
              },
              "viaRtp": {
                "helper": "If checked, encode DTMF in the active RTP stream, otherwise, DTMF may be encoded within the signaling protocol only when the protocol offers the option. Note: tone.dtmf.chassis.masking should be enabled when tone.dtmf.viaRtp is disabled."
              },
              "rfc2833Control": {
                "helper": "If checked, the phone will indicate a preference for encoding DTMF via RFC 2833 format in its Session Description Protocol (SDP) offers by showing support for the phone-event payload type; this does not affect SDP answers, these will always honor the DTMF format present in the offer since the phone has native support for RFC 2833."
              },
              "rfc2833Payload": {
                "helper": "The phone-event payload encoding in the dynamic range to be used in SDP offers."
              }
            }
          }
        }
      }
    }
  },
  "soundEffects_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "soundEffects": {
            "type": "object",
            "properties": {
              "stutterOnVoiceMail": {
                "title": "Stutter On VoiceMail",
                "type": "boolean"
              },
              "appLocalEnabled": {
                "title": "App Local Enabled",
                "type": "boolean"
              },
              "messageWaitingType": {
                "title": "Message Waiting Type",
                "type": "string",
                "enum": ["Chord", "Silence"]
              },
              "callWaitingType": {
                "title": "Call Waiting Type",
                "type": "string",
                "enum": ["Chord", "Silence"]
              },
              "callWaitingValue": {
                "title": "Call Waiting Value",
                "type": "string"
              },
              "longCallWaitingType1": {
                "title": "Type 1",
                "type": "string",
                "enum": ["Chord", "Silence"]
              },
              "longCallWaitingValue1": {
                "title": "Value 1",
                "type": "string"
              },
              "longCallWaitingType2": {
                "title": "Type 2",
                "type": "string",
                "enum": ["Chord", "Silence"]
              },
              "longCallWaitingValue2": {
                "title": "Value 2",
                "type": "string"
              },
              "longCallWaitingType3": {
                "title": "Type 3",
                "type": "string",
                "enum": ["Chord", "Silence"]
              },
              "longCallWaitingValue3": {
                "title": "Value 3",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "soundEffects_settings_options": {
    "helper": "Sound Effects",
    "fields": {
      "settings": {
        "fields": {
          "soundEffects": {
            "toolbarSticky": true,
            "helper": "SoundPoint(R) IP uses both synthesized (based on the chord-sets described earlier) and sampled audio sound effects. Sound effects are defined by patterns: rudimentary sequences of chord-sets, silence periods, and wave files.",
            "fields": {
              "stutterOnVoiceMail": {
                "helper": "If checked, stuttered dial tone is used in place of normal dial tone to indicate that one or more messages (voice-mail) are waiting at the message center."
              },
              "appLocalEnabled": {
                "helper": "If checked, local user interface sound effects such as confirmation/error tones, will be enabled."
              },
              "messageWaitingType": {
                "removeDefaultNone": true
              },
              "callWaitingType": {
                "removeDefaultNone": true
              },
              "longCallWaitingType1": {
                "removeDefaultNone": true
              },
              "longCallWaitingType2": {
                "removeDefaultNone": true
              },
              "longCallWaitingType3": {
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "voiceCodecs_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "voiceCodecs": {
            "type": "object",
            "properties": {
              "txPacketFilter": {
                "title": "Tx Packet Filter",
                "type": "boolean"
              },
              "codec": {
                "title": "Codec preference",
                "type": "array",
                "items": {
                  "enum": ["G711_A", "iLBC.13_33kbps", "iLBC.15_2kbps", "G.722", "G.722.1 (32 kbps)", "G7221_C.48kbps", "G729_AB", "G711_Mu"]
                }
              },
              "g711Mu_payloadSize": {
                "title": "G711MU Payload Size",
                "type": "string"
              },
              "g711Mu_jitterBufferMin": {
                "title": "G711MU Jitter Buffer Min",
                "type": "string"
              },
              "g711Mu_jitterBufferShrink": {
                "title": "G711MU Jitter Buffer Shrink",
                "type": "string"
              },
              "g711Mu_jitterBufferMax": {
                "title": "G711MU Jitter Buffer Max",
                "type": "string"
              },
              "g711A_payloadSize": {
                "title": "G711A Payload Size",
                "type": "string"
              },
              "g711A_jitterBufferMin": {
                "title": "G711A Jitter Buffer Min",
                "type": "string"
              },
              "g711A_jitterBufferShrink": {
                "title": "G711A Jitter Buffer Shrink",
                "type": "string"
              },
              "g711A_jitterBufferMax": {
                "title": "G711A Jitter Buffer Max",
                "type": "string"
              },
              "g729AB_payloadSize": {
                "title": "G729AB Payload Size",
                "type": "string"
              },
              "g729AB_jitterBufferMin": {
                "title": "G729AB Jitter Buffer Min",
                "type": "string"
              },
              "g729AB_jitterBufferShrink": {
                "title": "G729AB Jitter Buffer Shrink",
                "type": "string"
              },
              "g729AB_jitterBufferMax": {
                "title": "G729AB Jitter Buffer Max",
                "type": "string"
              },
              "g722_payloadSize": {
                "title": "G722 Payload Size",
                "type": "string"
              },
              "g722_jitterBufferMin": {
                "title": "G722 Jitter Buffer Min",
                "type": "string"
              },
              "g722_jitterBufferShrink": {
                "title": "G722 Jitter Buffer Shrink",
                "type": "string"
              },
              "g722_jitterBufferMax": {
                "title": "G722 Jitter Buffer Max",
                "type": "string"
              },
              "iLBC_13_33kbpsPayloadSize": {
                "title": "iLBC 13_33kbps Payload Size",
                "type": "string"
              },
              "iLBC_13_33kbpsBufferMin": {
                "title": "iLBC 13_33kbps Buffer Min",
                "type": "string"
              },
              "iLBC_13_33kbpsBufferShrink": {
                "title": "iLBC 13_33kbps Buffer Shrink",
                "type": "string"
              },
              "iLBC_13_33kbpsBufferMax": {
                "title": "iLBC 13_33kbps Buffer Max",
                "type": "string"
              },
              "iLBC_15_2kbpsPayloadSize": {
                "title": "iLBC 13_33kbps Payload Size",
                "type": "string"
              },
              "iLBC_15_2kbpsBufferMin": {
                "title": "iLBC 13_33kbps Buffer Min",
                "type": "string"
              },
              "iLBC_13_33kbpsBufferShrink": {
                "title": "iLBC 13_33kbps Buffer Shrink",
                "type": "string"
              },
              "iLBC_15_2kbpsBufferMax": {
                "title": "iLBC 13_33kbps Buffer Max",
                "type": "string"
              },
              "persistHandset": {
                "title": "Persist Handset",
                "type": "boolean"
              },
              "persistHeadset": {
                "title": "Persist Headset",
                "type": "boolean"
              },
              "persistHandsfree": {
                "title": "Persist Handsfree",
                "type": "boolean"
              },
              "vadEnable": {
                "title": "Enable voice activity Detection",
                "type": "boolean"
              },
              "vadTresh": {
                "title": "Voice activity Treshold",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "voiceCodecs_settings_options": {
    "helper": "Voice/Codecs",
    "fields": {
      "settings": {
        "fields": {
          "voiceCodecs": {
            "toolbarSticky": true,
            "fields": {
              "txPacketFilter": {
                "helper": "Flag to determine whether or not narrowband Tx high-pass filtering should be enabled."
              },
              "codec": {
                "items": {
                  "removeDefaultNone": true
                }
              },
              "persistHandset": {
                "helper": "If checked, the receive volume will be remembered between calls. If set to 0, the receive volume will be reset to nominal at the start of each call."
              },
              "persistHeadset": {
                "helper": "If checked, the receive volume will be remembered between calls. If set to 0, the receive volume will be reset to nominal at the start of each call."
              },
              "persistHandsfree": {
                "helper": "If checked, the receive volume will be remembered between calls. If set to 0, the receive volume will be reset to nominal at the start of each call."
              },
              "vadEnable": {
                "helper": "If checked, enable VAD."
              },
              "vadThresh": {
                "helper": "The threshold for determining what is active voice and what is background noise in dB. This does not apply to G.729AB codec operation which has its own built-in VAD function."
              }
            }
          }
        }
      }
    }
  },
  "voiceQMonitoring_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "voiceQMonitoring": {
            "type": "object",
            "properties": {
              "centralReportCollector": {
                "type": "object",
                "title": "Central Report Collector",
                "properties": {
                  "genQRep": {
                    "title": "Generate periodic quality reports",
                    "type": "boolean"
                  },
                  "genQRepAfterCalls": {
                    "title": "Generate quality report after calls",
                    "type": "boolean"
                  },
                  "alertStatesForReportGen": {
                    "title": "Alert states for report generation",
                    "type": "string",
                    "enum": [
                      "Critical",
                      "Warning or Critical"
                    ]
                  },
                  "reportInterval": {
                    "title": "Report Interval",
                    "type": "number"
                  }
                }
              },
              "alertReports": {
                "type": "object",
                "title": "Alert Reports",
                "properties": {
                  "mosLqAlertThreshold": {
                    "title": "MOS-LQ alert threshold",
                    "type": "number"
                  },
                  "mosLqCriticalAlertThreshold": {
                    "title": "MOS-LQ critical alert threshold",
                    "type": "number"
                  },
                  "oneWayDelayAlertThreshold": {
                    "title": "One way delay alert threshold",
                    "type": "number"
                  },
                  "oneWayDelayCriticalAlertThreshold": {
                    "title": "One way delay critical alert threshold",
                    "type": "number"
                  }
                }
              },
              "reportCollectorServer": {
                "type": "object",
                "title": "Report Collector Server",
                "properties": {
                  "serverAddress": {
                    "title": "Server Address",
                    "type": "string"
                  },
                  "serverPort": {
                    "title": "Server Port",
                    "type": "number"
                  }
                }
              },
              "rtcpXr": {
                "type": "object",
                "title": "RTCP-XR",
                "properties": {
                  "enableRtcpXr": {
                    "title": "Enable RTCP-XR",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "voiceQMonitoring_settings_options": {
    "helper": "Voice Quality Monitoring",
    "fields": {
      "settings": {
        "fields": {
          "voiceQMonitoring": {
            "toolbarSticky": true,
            "helper": "The SoundPoint IP phones can be configured to generate various quality metrics for listening and conversational quality. These metrics can be sent between the phones in RTCP XR packets. The metrics can also be downloaded in SIP messages to a central voice quality report collector. This feature requires a license key from Polycom to activate.",
            "fields": {
              "centralReportCollector": {
                "fields": {
                  "genQRep": {
                    "helper": "If checked, periodic quality reports will be generated throughout a call."
                  },
                  "genQRepAfterCalls": {
                    "helper": "If checked, quality reports will be generated at the end of each call."
                  },
                  "alertStatesForReportGen": {
                    "helper": "Controls the generation of periodic quality reports triggered by alert states."
                  },
                  "reportInterval": {
                    "helper": "The time interval between successive periodic quality reports."
                  }
                }
              },
              "alertReports": {
                "fields": {
                  "mosLqAlertThreshold": {
                    "helper": "Threshold value of listening MOS score (MOS-LQ) that causes phone to send a warning alert quality report. Configure the desired MOS value multiplied by 10. If left blank, warning alerts are not generated due to MOS-LQ. For example, a configured value of 35 corresponds to the MOS score 3.5."
                  },
                  "mosLqCriticalAlertThreshold": {
                    "helper": "Threshold value of listening MOS score (MOS-LQ) that causes phone to send a critical alert quality report. Configure the desired MOS value multiplied by 10. If left blank, critical alerts are not generated due to MOS-LQ. For example, a configured value of 28 corresponds to the MOS score 2.8."
                  },
                  "oneWayDelayAlertThreshold": {
                    "helper": "Threshold value of one way delay (in ms) that causes phone to send a critical alert quality report. If left blank, warning alerts are not generated due to one way delay. One-way delay includes both network delay and end system delay."
                  },
                  "oneWayDelayCriticalAlertThreshold": {
                    "helper": "Threshold value of one way delay (in ms) that causes phone to send a critical alert quality report. If left blank, critical alerts are not generated due to one way delay. One-way delay includes both network delay and end system delay."
                  }
                }
              },
              "reportCollectorServer": {
                "fields": {
                  "serverAddress": {
                    "helper": "IP address or host name of the report collector SIP server."
                  },
                  "serverPort": {
                    "helper": "Port of the report collector SIP server."
                  }
                }
              },
              "rtcpXr": {
                "fields": {
                  "enableRtcpXr": {
                    "helper": "If checked, RTCP XR (RTP Control Protocol Extended Reports) packets will be generated."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "qualityOfService_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "qualityOfService": {
            "type": "object",
            "properties": {
              "videoRtpUserPriority": {
                "title": "Video RTP User Priority",
                "type": "number"
              },
              "callControlUserPriority": {
                "title": "Call Control User Priority",
                "type": "number"
              },
              "otherUserPriority": {
                "title": "Other User Priority",
                "type": "number"
              },
              "rtpMinDelay": {
                "title": "RTP Min Delay",
                "type": "boolean"
              },
              "rtpMaxThroughput": {
                "title": "RTP Max Throughput",
                "type": "boolean"
              },
              "rtpMaxReliability": {
                "title": "RTP Max reliability",
                "type": "boolean"
              },
              "rtpMinCost": {
                "title": "RTP Min cost",
                "type": "boolean"
              },
              "rtpPrecedence": {
                "title": "RTP Precedence",
                "type": "number"
              },
              "callControlMinDelay": {
                "title": "Call Control Min Delay",
                "type": "boolean"
              },
              "callControlMaxThroughput": {
                "title": "Call Control Max Throughput",
                "type": "boolean"
              },
              "callControlMaxReliability": {
                "title": "Call Control Max Reliability",
                "type": "boolean"
              },
              "callControlMinCost": {
                "title": "Call Control Min Cost",
                "type": "boolean"
              },
              "callControlPrecedence": {
                "title":"Call Control Precedence",
                "type": "number"
              }
            }
          }
        }
      }
    }
  },
  "qualityOfService_settings_options": {
    "helper": "Quality of Service",
    "fields": {
      "settings": {
        "fields": {
          "qualityOfService": {
            "toolbarSticky": true,
            "fields": {
              "videoRtpUserPriority": {
                "helper": "User-priority used for Video RTP packets."
              },
              "callControlUserPriority": {
                "helper": "User-priority used for call control packets."
              },
              "rtpMinDelay": {
                "helper": "If checked, set min-delay bit in the IP TOS field of the IP header, or else don't set it."
              },
              "rtpMaxThroughput": {
                "helper": "If checked, set max-throughput bit in the IP TOS field of the IP header, or else don't set it."
              },
              "rtpMaxReliability": {
                "helper": "If checked, set max-reliability bit in the IP TOS field of the IP header, or else don't set it."
              },
              "rtpMinCost": {
                "helper": "If checked, set min-cost bit in the IP TOS field of the IP header, or else don't set it."
              },
              "rtpPrecedence": {
                "helper": "If checked, set precedence bits in the IP TOS field of the IP header, or else don't set them."
              },
              "callControlMinDelay": {
                "helper": "If checked, set min-delay bit in the IP TOS field of the IP header, or else don't set it."
              },
              "callControlMaxThroughput": {
                "helper": "If checked, set max-throughput bit in the IP TOS field of the IP header, or else don't set it."
              },
              "callControlMaxReliability": {
                "helper": "If checked, set max-reliability bit in the IP TOS field of the IP header, or else don't set it."
              },
              "callControlMinCost": {
                "helper": "If checked, set min-cost bit in the IP TOS field of the IP header, or else don't set it."
              },
              "callControlPrecedence": {
                "helper": "If checked, set precedence bits in the IP TOS field of the IP header, or else don't set them."
              }
            }
          }
        }
      }
    }
  },
  "sntp_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "sntp": {
            "type": "object",
            "properties": {
              "resyncPeriod": {
                "title": "Resync Period",
                "type": "number"
              },
              "address": {
                "title": "SNTP Server address",
                "type": "string"
              },
              "ignoreSntpAddress": {
                "title": "Ignore SNTP Address from DHCP",
                "type": "boolean"
              },
              "gmtOffset": {
                "title": "GMT Offset",
                "type": "number"
              },
              "ignoreDhcpOffset": {
                "title": "Ignore DHCP Offset",
                "type": "boolean"
              },
              "enableDST": {
                "title": "Enable DST",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  },
  "sntp_settings_options": {
    "helper": "SNTP",
    "fields": {
      "settings": {
        "fields": {
          "sntp": {
            "toolbarSticky": true,
            "helper": "The following table describes the parameters used to set up time synchronization and daylight savings time. The defaults shown will enable daylight savings time for North America. Daylight savings defaults",
            "fields": {
              "resyncPeriod": {
                "helper": "Time in seconds between SNTP re-syncs."
              },
              "address": {
                "helper": "Address of the SNTP server."
              },
              "ignoreSntpAddress": {
                "helper": "Use the SNTP server address configured on the phone instead of an address found via DHCP"
              },
              "gmtOffset": {
                "helper": "Offset in seconds of the local time zone from GMT. Note: 3600 seconds per hour"
              },
              "ignoreDhcpOffset": {
                "helper": "Ignore GMT Offset from DHCP"
              },
              "enableDST": {
                "helper": "If checked, apply daylight savings rules to displayed time."
              }
            }
          }
        }
      }
    }
  },
  "rtp_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "rtp": {
            "type": "object",
            "properties": {
              "filterByIp": {
                "title": "Filter by Ip",
                "type": "boolean"
              },
              "filterByPort": {
                "title": "Filter by port",
                "type": "boolean"
              },
              "forceSend": {
                "title": "Force Send",
                "type": "number"
              },
              "mediaPortRangeStart": {
                "title": "Media Port Range Start",
                "type": "number"
              }
            }
          }
        }
      }
    }
  },
  "rtp_settings_options": {
    "helper": "RTP",
    "fields": {
      "settings": {
        "fields": {
          "rtp": {
            "toolbarSticky": true,
            "fields": {
              "filterByIp": {
                "helper": "If checked, reject RTP packets arriving from (sent from) a non-negotiated (via SDP) IP address."
              },
              "filterByPort": {
                "helper": "If checked, reject RTP packets arriving from (sent from) a non-negotiated (via SDP) port."
              },
              "forceSend": {
                "helper": "When not empty, send all RTP packets to, and expect all RTP packets to arrive on, the specified port. Note: both tcpIpApp.port.rtp.filterByIp and tcpIpApp.port.rtp.filterByPort must be enabled for this to work."
              },
              "mediaPortRangeStart": {
                "helper": "If empty, the value 2222 will be used for the first allocated RTP port, otherwise, the specified port will be used. Subsequent ports will be allocated from a pool starting with the specified port plus two up to a value of (start-port + 46), after which the port number will wrap back to the starting value."
              }
            }
          }
        }
      }
    }
  },
  "tcpKeepAlive_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "tcpKeepAlive": {
            "type": "object",
            "properties": {
              "idleTransmitInterval": {
                "type": "number",
                "title": "Idle Transmit Interval"
              },
              "useKeepAliveTlsSipConnection": {
                "type": "boolean",
                "title": "Use keep-alive for TLS SIP connections"
              },
              "enablePersistentConnection": {
                "type": "boolean",
                "title": "Enable Persistent Connection"
              }
            }
          }
        }
      }
    }
  },
  "tcpKeepAlive_settings_options": {
    "helper": "TCP Keep-Alive",
    "fields": {
      "settings": {
        "fields": {
          "tcpKeepAlive": {
            "toolbarSticky": true,
            "fields": {
              "idleTransmitInterval": {
                "helper": "The idle time, in seconds, after which a keep-alive message is sent to the call server."
              },
              "useKeepAliveTlsSipConnection": {
                "helper": "If checked, enable TCP keep-alive for SIP signaling connections that use TLS transport."
              },
              "enablePersistentConnection": {
                "helper": "When the parameter value is set to 0, the TCP Socket connection gets closed and after a minute a new connection gets established and the phone tries to send any new SIP messages. When set to 1, the TCP Socket connection remains opened indefinitely."
              }
            }
          }
        }
      }
    }
  },
  "webServer_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "webServer": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "title": "enabled"
              },
              "configuration": {
                "title": "Configuration",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "title": "enabled"
                  },
                  "port": {
                    "type": "number",
                    "title": "port"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "webServer_settings_options": {
    "helper": "Web Server",
    "fields": {
      "settings": {
        "fields": {
          "webServer": {
            "toolbarSticky": true,
            "fields": {
              "enabled": {
                "helper": "If checked, the HTTP server will be enabled."
              },
              "configuration": {
                "fields": {
                  "enabled": {
                    "helper": "If checked, the HTTP server configuration interface will be enabled."
                  },
                  "port": {
                    "helper": "Port is 80 for HTTP servers. Care should be taken when choosing an alternate port."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "callHandling_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "callHandling": {
            "type": "object",
            "properties": {
              "doNotDisturb": {
                "type": "boolean",
                "title": "Do Not Disturb"
              },
              "callWaitingRing": {
                "type": "string",
                "title": "Call Waiting Ring",
                "enum": ["beep","ring", "silent"]
              },
              "rejectBusyOnDnd": {
                "type": "boolean",
                "title": "Reject Busy On Dnd"
              },
              "enableOnNotRegistered": {
                "type": "boolean",
                "title": "Enable On Not Registered"
              },
              "offeringTimeout": {
                "type": "number",
                "title": "Offering Timeout"
              },
              "ringBackTimeout": {
                "type": "number",
                "title": "Ring Back Timeout"
              },
              "lastCallReturnString": {
                "type": "string",
                "title": "Last Call Return String"
              },
              "callsPerLine": {
                "type": "string",
                "title": "Calls Per Line"
              },
              "dialtoneTimeout": {
                "type": "string",
                "title": "Dialtone Timeout"
              },
              "transferBlindPreferred": {
                "type": "boolean",
                "title": "Transfer Blind Preferred"
              },
              "stickyAutoLineSeize": {
                "type": "boolean",
                "title": "Sticky Auto Line Seize"
              },
              "stickyAutoLineSeizeOnHookDial": {
                "type": "boolean",
                "title": "Sticky Auto Line Seize On Hook Dialing"
              },
              "singleKeyPressConference": {
                "type": "boolean",
                "title": "Single Key Press Conference"
              },
              "otherPartTalkConfHold": {
                "type": "boolean",
                "title": "Other parties can talk when conference is on hold"
              },
              "directedCallPickupString": {
                "type": "string",
                "title": "Directed Call Pickup String"
              },
              "sharedLines": {
                "type": "object",
                "title": "Shared Lines",
                "properties": {
                  "disableDivert": {
                    "type": "boolean",
                    "title": "Disable Divert"
                  },
                  "seizeFailReorder": {
                    "type": "boolean",
                    "title": "Seize Fail Reorder"
                  },
                  "oneTouchResume": {
                    "type": "boolean",
                    "title": "One Touch Resume"
                  },
                  "exposeAutoHolds": {
                    "type": "boolean",
                    "title": "Expose Auto Holds"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "callHandling_settings_options": {
    "helper": "Call Handling",
    "fields": {
      "settings": {
        "fields": {
          "callHandling": {
            "toolbarSticky": true,
            "fields": {
              "doNotDisturb": {
                "helper": "If checked, the DND feature will allow selection of DND on a per-registration basis."
              },
              "callWaitingRing": {
                "removeDefaultNone": true
              },
              "rejectBusyOnDnd": {
                "helper": "If checked, reject all incoming calls with the reason 'busy' if do-not-disturb is enabled."
              },
              "enableOnNotRegistered": {
                "helper": "If checked, calls will be allowed when the phone is not successfully registered, otherwise, calls will not be permitted without a valid registration."
              },
              "offeringTimeout": {
                "helper": "Time in seconds to allow an incoming call to ring before dropping the call, 0=infinite."
              },
              "ringBackTimeout": {
                "helper": "Time in seconds to allow an outgoing call to remain in the ringback state before dropping the call, 0=infinite."
              },
              "lastCallReturnString": {
                "helper": "The string sent to the server when the user selects the 'last call return' action."
              },
              "callsPerLine": {
                "helper": "The number of calls or conferences which may be active or on hold per line key on the phone."
              },
              "dialtoneTimeout": {
                "helper": "Time in seconds to allow the dialtone to be played before dropping the call. If set to 0, the call is not dropped. If no value is specified, call dropped after 60 seconds."
              },
              "transferBlindPreferred": {
                "helper": "If checked, the Blind soft key appears as a transfer type. If not checked the Normal soft key appears. Note: This parameter is supported on the SoundPoint IP 330/320 only."
              },
              "singleKeyPressConference": {
                "helper": "If checked, the conference will be setup after pressing the Conference soft key or Conference key the first time. Also, all sound effects (dial tone,DTMF tone while dialing and ringing back) are heard by all existing participants in the conference."
              },
              "otherPartTalkConfHold": {
                "helper": "If checked, other parties can still talk when the conference is put on hold. Otherwise, all parties are placed on hold with the conference."
              },
              "directedCallPickupString": {
                "helper": "The star code to initiate a directed call pickup."
              },
              "sharedLines": {
                "fields": {
                  "disableDivert": {
                    "helper": "If checked, disable diversion feature for shared lines."
                  },
                  "seizeFailReorder": {
                    "helper": "If checked, play reorder tone locally on shared line seize failure."
                  },
                  "oneTouchResume": {
                    "helper": "If checked, when a shared line has a call on hold the remote user can press that line and resume the call. If more than one call is on hold on the line then the first one will be selected and resumed automatically. If set to 0, pressing the shared line will bring up a list of the calls on that line and the user can select which call the next action should be applied to. The call diversion, no answer feature will take precedence over this feature if enabled."
                  },
                  "exposeAutoHolds": {
                    "helper": "If checked, when a shared line is starting a conference or setting up a transfer, a re-INVITE will be sent to the server. When unchecked no re-INVITE will be sent to the server."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "holdReminder_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "holdReminder": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "title": "Enabled"
              },
              "period": {
                "type": "number",
                "title": "Period"
              },
              "startDelay": {
                "type": "number",
                "title": "Start Delay"
              }
            }
          }
        }
      }
    }
  },
  "holdReminder_settings_options": {
    "helper": "Hold Reminder",
    "fields": {
      "settings": {
        "fields": {
          "holdReminder": {
            "toolbarSticky": true,
            "fields": {
              "enable": {
                "helper": "If checked, periodically notify the local user that calls have been on hold for an extended period of time."
              },
              "period": {
                "helper": "Time in seconds between subsequent reminders."
              },
              "startDelay": {
                "helper": "Time in seconds to wait before the initial reminder."
              }
            }
          }
        }
      }
    }
  },
  "directoryResources_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "directoryResources": {
            "type": "object",
            "properties": {
              "readOnlyLocalResources": {
                "type": "boolean",
                "title": "Read Only Local Resources"
              },
              "volatileMemory":{
                "type": "object",
                "title": "Volatile Memory",
                "properties": {
                  "maxSizeKBytes": {
                    "type": "number",
                    "title": "Max Size KBytes"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "directoryResources_settings_options": {
    "helper": "Directory Resources",
    "fields": {
      "settings": {
        "fields": {
          "directoryResources": {
            "toolbarSticky": true,
            "fields": {
              "readOnlyLocalResources": {
                "helper": "Specifies whether or not local contact directory is read only. If unchecked, the local contact directory is editable. If checked the local contact directory is read only."
              },
              "volatileMemory": {
                "helper": "Applies only if you've enabled volatile memory on on your 2MB or 4MB system.",
                "fields": {
                  "maxSizeKBytes": {
                    "helper": "Maximum size in Kbytes of volatile storage that the directory will be permitted to consume."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "presence_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "presence": {
            "type": "object",
            "properties": {
              "registrationServer": {
                "type": "number",
                "title": "Registration Server"
              },
              "presenceIdleSoftKeys": {
                "type": "boolean",
                "title": "Presence Idle Soft Keys"
              }
            }
          }
        }
      }
    }
  },
  "presence_settings_options": {
    "helper": "Presence",
    "fields": {
      "settings": {
        "fields": {
          "presence": {
            "toolbarSticky": true,
            "fields": {
              "registrationServer": {
                "helper": "Where to register presence information other than SIP registration server."
              },
              "presenceIdleSoftKeys": {
                "helper": "MyStat and Buddies softkeys will appear if enabled. This feature is not used and should only be enabled by advanced administrators."
              }
            }
          }
        }
      }
    }
  },
  "keys_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "object",
            "properties": {
              "scrollingTimeout": {
                "type": "number",
                "title": "Scrolling Timeout"
              }
            }
          }
        }
      }
    }
  },
  "keys_settings_options": {
    "helper": "Keys",
    "fields": {
      "settings": {
        "fields": {
          "keys": {
            "toolbarSticky": true,
            "fields": {
              "scrollingTimeout": {
                "helper": "The time-out after which a key that is enabled for scrolling will go into scrolling mode until the key is released. Keys enabled for scrolling are menu navigation keys (left, right, up, down arrows), volume keys, and some context-specific soft keys. The value is an integer multiple of 500 milliseconds (1=500ms)."
              }
            }
          }
        }
      }
    }
  },
  "authentication_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "authentication": {
            "type": "object",
            "properties": {
              "setAdminPswd": {
                "type": "boolean",
                "title": "Set Admin Password"
              },
              "adminPswd": {
                "type": "number",
                "title": "Admin Password"
              },
              "setUserPswd": {
                "type": "number",
                "title": "Set User Password"
              },
              "userPswd": {
                "type": "number",
                "title": "User Password"
              }
            }
          }
        }
      }
    }
  },
  "authentication_settings_options": {
    "helper": "Authentication",
    "fields": {
      "settings": {
        "fields": {
          "authentication": {
            "toolbarSticky": true,
            "fields": {
              "setAdminPswd": {
                "helper": "Enable/Disable Admin Password overwrite"
              },
              "adminPswd": {
                "helper": "Polycom default is 4567"
              },
              "setUserPswd": {
                "helper": "Enable/Disable User Password overwrite"
              },
              "userPswd": {
                "helper": "Polycom default is 4567"
              }
            }
          }
        }
      }
    }
  },
  "logging_settings_schema":{
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "logging": {
            "type": "object",
            "properties": {
              "logLevel": {
                "type": "object",
                "title": "Log Level",
                "properties": {
                  "supportObjects": {
                    "type": "string",
                    "title": "Support Objects",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "application": {
                    "type": "string",
                    "title": "Application",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "sip": {
                    "type": "string",
                    "title": "SIP",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "ssps": {
                    "type": "string",
                    "title": "SSPS",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pps": {
                    "type": "string",
                    "title": "PPS",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "network": {
                    "type": "string",
                    "title": "Network",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "configuration": {
                    "type": "string",
                    "title": "Configuration",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "cdp": {
                    "type": "string",
                    "title": "CDP",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "lldp": {
                    "type": "string",
                    "title": "lldp",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pmt": {
                    "type": "string",
                    "title": "PMT",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "ares": {
                    "type": "string",
                    "title": "ARES",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "dns": {
                    "type": "string",
                    "title": "DNS",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "httpServer": {
                    "type": "string",
                    "title": "HTTP Server",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "ramDisk": {
                    "type": "string",
                    "title": "RAM Disk",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "copyUtilities": {
                    "type": "string",
                    "title": "Copy Utilities",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "schedLogs": {
                    "type": "string",
                    "title": "Scheduled Logs",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "resourceFinder": {
                    "type": "string",
                    "title": "Resource Finder",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "keyObserver": {
                    "type": "string",
                    "title": "Key Observer",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "logging": {
                    "type": "string",
                    "title": "Logging",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "curl": {
                    "type": "string",
                    "title": "CURL",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "rtos": {
                    "type": "string",
                    "title": "RTOS",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "microBrowser": {
                    "type": "string",
                    "title": "Micro Browser",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "idleBrowser": {
                    "type": "string",
                    "title": "Idle Browser",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "ttrs": {
                    "type": "string",
                    "title": "ttrs",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "usb": {
                    "type": "string",
                    "title": "usb",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "srtp": {
                    "type": "string",
                    "title": "srtp",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "clink": {
                    "type": "string",
                    "title": "clink",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pnetm": {
                    "type": "string",
                    "title": "pnetm",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "peer": {
                    "type": "string",
                    "title": "usb",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "efk": {
                    "type": "string",
                    "title": "efk",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "ldap": {
                    "type": "string",
                    "title": "ldap",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "cmr": {
                    "type": "string",
                    "title": "cmr",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "cmp": {
                    "type": "string",
                    "title": "cmp",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "usbio": {
                    "type": "string",
                    "title": "usbio",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pres": {
                    "type": "string",
                    "title": "efk",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pwrsv": {
                    "type": "string",
                    "title": "pwrsv",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "pool": {
                    "type": "string",
                    "title": "pool",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "push": {
                    "type": "string",
                    "title": "push",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  },
                  "wmgr": {
                    "type": "string",
                    "title": "wmgr",
                    "enum": [
                      "Debug only",
                      "High detail",
                      "Moderate detail",
                      "Low detail",
                      "Minor error",
                      "Major error"
                    ]
                  }
                }
              },
              "syslog": {
                "type": "object",
                "title": "Syslog",
                "properties": {
                  "serverAddress": {
                    "type": "string",
                    "title": "Server Address"
                  },
                  "transport": {
                    "type": "string",
                    "title": "Transport",
                    "enum": ["UDP", "TCP", "TLS"]
                  },
                  "facility": {
                    "type": "number",
                    "title": "Facility"
                  },
                  "renderLevel": {
                    "type": "string",
                    "title": "Transport",
                    "enum": ["Debug only", "High detail", "Moderate detail", "Low detail", "Minor error", "Major error", "Fatal error"]
                  },
                  "prependMac": {
                    "type": "string",
                    "title": "Prepand MAC",
                    "enum": ["Enabled", "Disabled"]
                  }
                }
              },
              "ftpLogRendering": {
                "type": "object",
                "title": "FTP Log Rendering",
                "properties": {
                  "level": {
                    "type": "string",
                    "title": "level",
                    "enum": ["Debug only", "High detail", "Moderate detail", "Low detail", "Minor error", "Major error", "Fatal error"]
                  },
                  "timeFormat": {
                    "type": "string",
                    "title": "Time format",
                    "enum": ["Minutes and seconds since booting", "Absolute time (minutes)", "Absolute time (seconds)"]
                  },
                  "fileSize": {
                    "type": "number",
                    "title": "File Size"
                  },
                  "fileUploadPeriod": {
                    "type": "number",
                    "title": "File Upload Period"
                  },
                  "fileUploadAppend": {
                    "type": "boolean",
                    "title": "File Upload Append"
                  },
                  "logfileLimit": {
                    "type": "number",
                    "title": "Logfile Limit"
                  },
                  "limitReachedAction": {
                    "type": "string",
                    "title": "Limit Reached Action",
                    "enum": ["Delete File", "Stop Appending"]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "logging_settings_options": {
    "helper": "Logging",
    "fields": {
      "settings": {
        "fields": {
          "logging": {
            "toolbarSticky": true,
            "fields": {
              "logLevel": {
                "helper": "Logging detail level for individual components.",
                "fields": {
                  "supportObjects": {
                    "removeDefaultNone": true
                  },
                  "application": {
                    "removeDefaultNone": true
                  },
                  "sip": {
                    "removeDefaultNone": true
                  },
                  "ssps": {
                    "removeDefaultNone": true
                  },
                  "pps": {
                    "removeDefaultNone": true
                  },
                  "network": {
                    "removeDefaultNone": true
                  },
                  "configuration": {
                    "removeDefaultNone": true
                  },
                  "cdp": {
                    "removeDefaultNone": true
                  },
                  "lldp": {
                    "removeDefaultNone": true
                  },
                  "pmt": {
                    "removeDefaultNone": true
                  },
                  "ares": {
                    "removeDefaultNone": true
                  },
                  "dns": {
                    "removeDefaultNone": true
                  },
                  "httpServer": {
                    "removeDefaultNone": true
                  },
                  "ramDisk": {
                    "removeDefaultNone": true
                  },
                  "copyUtilities": {
                    "removeDefaultNone": true
                  },
                  "schedLogs": {
                    "removeDefaultNone": true
                  },
                  "resourceFinder": {
                    "removeDefaultNone": true
                  },
                  "keyObserver": {
                    "removeDefaultNone": true
                  },
                  "logging": {
                    "removeDefaultNone": true
                  },
                  "curl": {
                    "removeDefaultNone": true
                  },
                  "rtos": {
                    "removeDefaultNone": true
                  },
                  "microBrowser": {
                    "removeDefaultNone": true
                  },
                  "idleBrowser": {
                    "removeDefaultNone": true
                  },
                  "ttrs": {
                    "removeDefaultNone": true
                  },
                  "usb": {
                    "removeDefaultNone": true
                  },
                  "srtp": {
                    "removeDefaultNone": true
                  },
                  "clink": {
                    "removeDefaultNone": true
                  },
                  "pnetm": {
                    "removeDefaultNone": true
                  },
                  "peer": {
                    "removeDefaultNone": true
                  },
                  "efk": {
                    "removeDefaultNone": true
                  },
                  "ldap": {
                    "removeDefaultNone": true
                  },
                  "cmr": {
                    "removeDefaultNone": true
                  },
                  "cmp": {
                    "removeDefaultNone": true
                  },
                  "usbio": {
                    "removeDefaultNone": true
                  },
                  "pres": {
                    "removeDefaultNone": true
                  },
                  "pwrsv": {
                    "removeDefaultNone": true
                  },
                  "poll": {
                    "removeDefaultNone": true
                  },
                  "push": {
                    "removeDefaultNone": true
                  },
                  "wmgr": {
                    "removeDefaultNone": true
                  }
                }
              },
              "syslog":{
                "fields": {
                  "serverAddress": {
                    "helper": "The syslog server IP address or host name."
                  },
                  "transport": {
                    "helper": "The protocol that the phone will use to write to thesyslog server. If set to 'None', transmission is turned off, but the server address is preserved."
                  },
                  "facility": {
                    "helper": "TA description of what generated the log message. For more information,refer to section 4.1.1 of RFC 3165. The default value is 16, which maps to 'local 0'."
                  },
                  "renderLevel": {
                    "helper": "Specifies the lowest class of event that will be rendered to syslog. Note: It is a dual filter with the 'log level'->'Logging' being the first pass. For example: if set 'log level'->'Logging' to 'Minor error', and 'Syslog'->'render level' to 'Moderate detail', only events with severity 'Minor error' and higher will be syslog'd."
                  },
                  "prependMac": {
                    "helper": "If enabled, the phone's MAC address is prepended to the log message sent to the syslog server.",
                    "removeDefaultNone": true
                  }
                }
              },
              "ftpLogRendering":{
                "fields": {
                  "level": {
                    "helper": "Specifies the lowest class of event that will be rendered to the log files. This is the output filter from the internal memory-based log system.",
                    "removeDefaultNone": true
                  },
                  "timeFormat": {
                    "removeDefaultNone": true
                  },
                  "fileSize": {
                    "helper": "Maximum local application log file size in Kbytes. When this size is exceeded, the file is uploaded to the boot server and the local copy is erased."
                  },
                  "fileUploadUpload": {
                    "helper": "Time in seconds between log file uploads to the boot server. Note: The log file will not be uploaded if no new events have been logged since the last upload."
                  },
                  "fileUploadAppend": {
                    "helper": "If checked, use append mode when uploading log files to server."
                  },
                  "logfileLimit": {
                    "helper": "Maximum log file size on boot server in Kbytes."
                  },
                  "limitReachedAction": {
                    "helper": "Behavior when server log file has reached its limit. delete=delete file and start over, stop=stop appending to file.",
                    "removeDefaultNone": true
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "licence_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "licence": {
            "type": "object",
            "properties": {
              "pollingTime": {
                "type": "string",
                "title": "Polling Time"
              }
            }
          }
        }
      }
    }
  },
  "licence_settings_options": {
    "helper": "Licence"
  },
  "request_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "request": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "title": "Type",
                "enum": [
                  "audio",
                  "call",
                  "no strategy"
                ]
              }
            }
          }
        }
      }
    }
  },
  "request_settings_options": {
    "helper": "Request",
    "fields": {
      "settings": {
        "fields": {
          "request": {
            "toolbarSticky": true,
            "fields": {
              "type": {
                "helper": "Defines the strategy to adopt before a request gets executed. If set to 'audio', a request can be executed as soon as there is no active audio on the phone, independently of any call state. If set to 'call', a request can be executed as soon as there are no calls in any state on the phone.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "features_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "features": {
            "type": "object",
            "properties": {
              "presence": {
                "type": "boolean",
                "title": "Presence"
              },
              "messaging": {
                "type": "boolean",
                "title": "Messaging"
              },
              "directory": {
                "type": "boolean",
                "title": "Directory"
              },
              "callList": {
                "type": "boolean",
                "title": "Call List"
              },
              "ringDownload": {
                "type": "boolean",
                "title": "Ring Download"
              },
              "callListReceived": {
                "type": "boolean",
                "title": "Call List Received",
                "dependencies": "callList"
              },
              "callListPlaced": {
                "type": "boolean",
                "title": "Call List Placed",
                "dependencies": "callList"
              },
              "callListMissed": {
                "type": "boolean",
                "title": "Call List Missed",
                "dependencies": "callList"
              },
              "urlDialing": {
                "type": "boolean",
                "title": "URL Dialing"
              },
              "callPark": {
                "type": "boolean",
                "title": "Call Park"
              },
              "groupCallPickup": {
                "type": "boolean",
                "title": "Group Call Pickup"
              },
              "directedCallPickup": {
                "type": "boolean",
                "title": "Directed Call Pickup"
              },
              "lastcallReturn": {
                "type": "boolean",
                "title": "Last-call return"
              },
              "acdLoginLogout": {
                "type": "boolean",
                "title": "ACD Login/Logout"
              },
              "acdAgentAvailable": {
                "type": "boolean",
                "title": "ACD Agent Available"
              },
              "acdAgentUnavailability": {
                "type": "boolean",
                "title": "ACD agent unavailability (premium)"
              },
              "acdServiceControlUri": {
                "type": "boolean",
                "title": "ACD service control uri"
              },
              "bluetooth": {
                "type": "boolean",
                "title": "Bluetooth"
              },
              "callCenterStatus": {
                "type": "boolean",
                "title": "Call center status"
              },
              "nwayConferencing": {
                "type": "boolean",
                "title": "N-way conferencing"
              },
              "callRecordingPlayback": {
                "type": "boolean",
                "title": "Call recording/playback"
              },
              "corporateDirectory": {
                "type": "boolean",
                "title": "Corporate directory"
              },
              "enhancedKeys": {
                "type": "boolean",
                "title": "Enhanced Keys"
              },
              "enhancedCallDisplay": {
                "type": "boolean",
                "title": "Enhanced call display"
              }
            }
          }
        }
      }
    }
  },
  "features_settings_options": {
    "helper": "Features",
    "fields": {
      "settings": {
        "fields": {
          "features": {
            "toolbarSticky": true,
            "fields": {
              "presence": {
                "helper": "Presence feature including management of buddies and own status"
              },
              "messaging": {
                "helper": "Instant messaging feature"
              },
              "directory": {
                "helper": "Local directory feature"
              },
              "callList": {
                "helper": "Locally controlled call lists"
              },
              "ringDownload": {
                "helper": "Run-time downloading of ringers"
              },
              "callListReceived": {
                "helper": "Received calls list feature. Note: Call List must also be enabled"
              },
              "callListPlaced": {
                "helper": "Placed calls list feature. Note: Call List must also be enabled"
              },
              "callListMissed": {
                "helper": "Missed calls list feature. Note: Call List must also be enabled"
              },
              "urlDialing": {
                "helper": "Controls whether URL/name dialing is available from a line. Disable this to prevent unknown callers from being identified on the display by an IP address."
              },
              "callPark": {
                "helper": "Call park and retrieve feature"
              },
              "groupCallPickup": {
                "helper": "Group call pickup feature"
              },
              "directedCallPickup": {
                "helper": "Directed call pickup feature"
              },
              "lastcallReturn": {
                "helper": "Last-call return feature"
              },
              "acdLoginLogout": {
                "helper": "ACD login / logout feature"
              },
              "acdAgentAvailable": {
                "helper": "ACD agent available / unavailable feature"
              },
              "acdAgentUnavailability": {
                "helper": "ACD agent unavailability (premium) feature"
              },
              "acdServiceControlUri": {
                "helper": "ACD service control uri feature"
              },
              "bluetooth": {
                "helper": "Bluetooth feature"
              },
              "callCenterStatus": {
                "helper": "Call center status feature"
              },
              "callRecordingPlayback": {
                "helper": "Call recording and playback feature"
              },
              "nwayConferencing": {
                "helper": "N-way conferencing feature"
              },
              "corporateDirectory": {
                "helper": "Corporate directory feature"
              },
              "enhancedKeys": {
                "helper": "Enhanced Keys feature"
              },
              "enhancedCallDisplay": {
                "helper": "Enhanced call display feature"
              }
            }
          }
        }
      }
    }
  },
  "customConfiguration_settings_schema":{
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "customConfiguration": {
            "type": "object",
            "properties": {
              "configFiles": {
                "type": "string",
                "title": "Configuration Files"
              }
            }
          }
        }
      }
    }
  },
  "customConfiguration_settings_options": {
    "helper": "Custom Configuration",
    "fields": {
      "settings": {
        "fields": {
          "customConfiguration": {
            "toolbarSticky": true,
            "fields": {
              "configFiles": {
                "helper": "Comma separated list of polycom configuration files that you have created according to the polycom configuration specifications and have uploaded using the 'Device Files' page. You only want to define settings that are not configurable through any other method as these settings will be unmanaged and hidden from other administrators without downloading them."
              }
            }
          }
        }
      }
    }
  },
  "microBrowser_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "microBrowser": {
            "type": "object",
            "properties": {
              "proxy": {
                "type": "string",
                "title": "Proxy"
              },
              "idleDisplay": {
                "type": "object",
                "title": "Idle Display",
                "properties": {
                  "home": {
                    "type": "string",
                    "title": "Home"
                  },
                  "refresh": {
                    "type": "number",
                    "title": "Refresh"
                  }
                }
              },
              "main": {
                "type": "object",
                "title": "Main",
                "properties": {
                  "home": {
                    "type": "string",
                    "title": "Home"
                  },
                  "idleTimeout": {
                    "type": "number",
                    "title": "Idle Timeout"
                  },
                  "statusbar": {
                    "type": "boolean",
                    "title": "Statusbar"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "microBrowser_settings_options": {
    "helper": "MicroBrowser",
    "fields": {
      "settings": {
        "fields": {
          "microBrowser": {
            "toolbarSticky": true,
            "helper": "These settings control the home page and proxy to be used by the MicroBrowser when it is selected to provide services and also when it is used as part of the Idle Display. They also control size limits and the Idle Display refresh rate",
            "fields": {
              "proxy": {
                "helper": "Address of the desired HTTP proxy to be used by the MicroBrowser. If blank, normal unproxied HTTP is used by the MicroBrowser."
              },
              "idleDisplay": {
                "fields": {
                  "home": {
                    "helper": "URL used for MicroBrowser idle display home-page. Example: http://www.example.com/ xhtml/frontpage.cgi?page=home. If empty, there will be no microbrowser idle display feature. Note that the MicroBrowser idle display will displace the idle display indicator. See Indicators settings."
                  },
                  "refresh": {
                    "helper": "The period in seconds between refreshes of the idle display MicroBrowser's content. 0 = the idle display MicroBrowser is not refreshed. Minimum refresh period = 5 seconds (values from 1 to 4 will be ignored, and 5 will be used instead) Notes: If an HTTP Refresh header is detected, it will be respected, even if this parameter is set to 0. The use of this parameter in combination with the Refresh HTTP header may cause the idle display to refresh at unexpected times."
                  }
                }
              },
              "main": {
                "fields": {
                  "home": {
                    "helper": "URL used for MicroBrowser home-page. If blank, the browser will notify the user that a blank home-page was used. Example: http://www.example.com/ xhtml/frontpage.cgi?page=home."
                  },
                  "idleTimeout": {
                    "helper": "Timeout for the interactive browser. If the interactive browser remains idle for a defined period of time, the phone should return to the idle browser. If set to 0 or no value, there is no timeout. Allowable values are 0 through 10."
                  },
                  "statusbar": {
                    "helper": "Flag to determine whether or not to turn off display of status messages."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "sipServers_settings_schema":{
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "sipServers": {
            "type": "object",
            "properties": {
              "outboundProxy": {
                "type": "object",
                "title": "Outbound Proxy",
                "properties": {
                  "server": {
                    "type": "string",
                    "title": "Server"
                  },
                  "port": {
                    "type": "number",
                    "title": "Port"
                  },
                  "transport": {
                    "type": "string",
                    "title": "Transport",
                    "enum": ["UDPOnly", "TCPOnly", "TCPpreferred", "DNSnaptr", "TLS"]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "sipServers_settings_options": {
    "helper": "SIP Servers",
    "fields": {
      "settings": {
        "fields": {
          "sipServers": {
            "toolbarSticky": true,
            "fields": {
              "outboundProxy": {
                "fields": {
                  "server": {
                    "helper": "IP address or host name and port of a SIP server to which the phone shall send all requests for making calls."
                  },
                  "transport": {
                    "helper": "DNSnaptr, TCPpreferred or UDPonly. If empty or DNSnaptr and if Address is a hostname and Port is 0 or empty, do NAPTR then SRV look-ups to try to discover the transport, ports and servers, as per RFC 3263. If Address is an IP address, or a port is given, then UDP is used. If set to TCPpreferred: TCP is the preferred transport, UDP is used if TCP fails. If set to UDPonly: Only UDP will be used.",
                    "removeDefaultNone": true
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "security": {
            "type": "object",
            "properties": {
              "tagSerialNo": {
                "type": "boolean",
                "title": "Tag Serial Number"
              },
              "passwordLength": {
                "type": "object",
                "title": "Password Length",
                "properties": {
                  "admin": {
                    "type": "number",
                    "title": "Admin"
                  },
                  "user": {
                    "type": "number",
                    "title": "User"
                  }
                }
              },
              "srtp": {
                "type": "object",
                "title": "SRTP",
                "properties": {
                  "enableSrtp": {
                    "type": "boolean",
                    "title": "Enable SRTP"
                  },
                  "offerSrtp": {
                    "type": "boolean",
                    "title": "Offer SRTP"
                  },
                  "requireSrtp": {
                    "type": "boolean",
                    "title": "Require SRTP"
                  },
                  "aesCm128HmacSha1_80Sdp": {
                    "type": "boolean",
                    "title": "AES_CM_128_HMAC_SHA1_80 in SDP"
                  },
                  "aesCm128HmacSha1_32Sdp": {
                    "type": "boolean",
                    "title": "AES_CM_128_HMAC_SHA1_32 in SDP"
                  },
                  "keyLifetime": {
                    "type": "number",
                    "title": "Key Lifetime"
                  },
                  "enableMasterKeyIdentifier": {
                    "type": "boolean",
                    "title": "Enable Master Key Identifier"
                  },
                  "noAuthRtpOffered": {
                    "type": "boolean",
                    "title": "No Authentication of RTP Offered"
                  },
                  "noAuthRtpRequired": {
                    "type": "boolean",
                    "title": "No Authentication of RTP Required"
                  },
                  "noEncryptionRtcpOffered": {
                    "type": "boolean",
                    "title": "No Encryption of RTCP Offered"
                  },
                  "noEncryptionRtcpRequired": {
                    "type": "boolean",
                    "title": "No Encryption of RTP Required"
                  },
                  "noEncryptionRtpOffered": {
                    "type": "boolean",
                    "title": "No Encryption of RTP Offered"
                  },
                  "noEncryptionRtpRequired": {
                    "type": "boolean",
                    "title": "No Encryption of RTP Required"
                  },
                  "requireMatchingTag": {
                    "type": "boolean",
                    "title": "Require Matching Tag"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security_settings_options": {
    "helper": "Security",
    "fields": {
      "settings": {
        "fields": {
          "security": {
            "toolbarSticky": true,
            "helper": "These settings affect security aspects of SoundPoint(R) IP.",
            "fields": {
              "tagSerialNo": {
                "helper": "If checked, the phone may advertise its serial number (Ethernet address) via protocol signaling."
              },
              "passwordLength": {
                "fields": {
                  "admin": {
                    "helper": "Password changes will need to be at least this long. Use 0 to allow null passwords."
                  },
                  "user": {
                    "helper": "Password changes will need to be at least this long. Use 0 to allow null passwords."
                  }
                }
              },
              "srtp": {
                "fields": {
                  "enableSrtp": {
                    "helper": "If checked, the phone accepts SRTP offers."
                  },
                  "offerSrtp": {
                    "helper": "If checked, the phone includes a secure media stream description along with the usual non-secure media description in the SDP of a SIP INVITE. This is for the phone initiating (offering) a phone call."
                  },
                  "requireSrtp": {
                    "helper": "If checked, the phone is only allowed to use secure media streams. Any offered SIP INVITEs must include a secure media description in the SDP or the call will be rejected. For outgoing calls only a secure media stream description is included in the SDP of the SIP INVITE, meaning that the non-secured media description is not included. If enabled, Offer SRTP option is logically enabled no matter what value for Offer SRTP."
                  },
                  "aesCm128HmacSha1_80Sdp": {
                    "helper": "If checked, a crypto line with the AES_CM_128_HMAC_SHA1_80 crypto-suite will be included in offered SDP."
                  },
                  "aesCm128HmacSha1_32Sdp": {
                    "helper": "If checked, a crypto line with the AES_CM_128_HMAC_SHA1_32 crypto-suite will be included in offered SDP."
                  },
                  "keyLifeTime": {
                    "helper": "The master key lifetime used for the cryptographic attribute in SDP. The value specified is the number of SRTP packets. If set to 0 the master key lifetime is not set. If set to 1 or greater, master key lifetime is set. Note: setting this parameter to a non-zero value may affect performance of the phone."
                  },
                  "enableMasterKeyIdentifier": {
                    "helper": "The master key identifier (MKI) is an optional parameter for the cryptographic attribute in the SDP that uniquely identifies the SRTP stream within an SRTP session. If checked a four-byte MKI parameter is sentwithin SDP message of the SIP INVITE / 200 OK."
                  },
                  "noAuthRtpOffered": {
                    "helper": "If checked, no authentication of RTP is offered."
                  },
                  "noAuthRtpRequired": {
                    "helper": "If checked, no authentication of RTP is required."
                  },
                  "noEncryptionRtcpOffered": {
                    "helper": "If checked, no encryption of RTCP is offered."
                  },
                  "noEncryptionRtcpRequired": {
                    "helper": "If checked, no encryption of RTCP is required."
                  },
                  "noEncryptionRtpOffered": {
                    "helper": "If checked, no encryption of RTP is offered."
                  },
                  "noEncryptionRtpRequired": {
                    "helper": "If checked, no encryption of RTP is required."
                  },
                  "requireMatchingTag": {
                    "helper": "Flag to determine wheter or not to check the tag value in the crypto attribute in an SDP answer. If checked, the tag values must match."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "sip_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "sip": {
            "type": "object",
            "properties": {
              "tcpFastFailover": {
                "type": "boolean",
                "title": "TCP Fast Failover"
              },
              "serverFeatureControl": {
                "type": "object",
                "title": "Server Feature Control",
                "properties": {
                  "serverBasedCallForwarding": {
                    "type": "boolean",
                    "title": "Server Based Call Forwarding"
                  },
                  "serverBasedCallFrwdLocProcess": {
                    "type": "boolean",
                    "title": "Server Based Call Forwarding Local Processing"
                  },
                  "serverBasedDND": {
                    "type": "boolean",
                    "title": "Server Based Do Not Disturb"
                  },
                  "serverBasedDNDLocProcess": {
                    "type": "boolean",
                    "title": "Server Based Do Not Disturb Local Processing"
                  }
                }
              },
              "port": {
                "type": "object",
                "title": "Port",
                "properties": {
                  "localPort": {
                    "type": "number",
                    "title": "Local Port"
                  }
                }
              },
              "protocol":{
                "type": "object",
                "title": "Protocol",
                "properties": {
                  "enableUaCSTA": {
                    "type": "boolean",
                    "title": "Enable uaCSTA"
                  },
                  "useRFC2543hold": {
                    "type": "boolean",
                    "title": "Use RFC2543 Hold"
                  },
                  "use486ForReject": {
                    "type": "boolean",
                    "title": "Use 486 for Reject"
                  },
                  "useContactUriTransfers": {
                    "type": "boolean",
                    "title": "Use Contact URI for Transfers"
                  },
                  "lcs": {
                    "type": "boolean",
                    "title": "LCS"
                  },
                  "useSendonlyHold": {
                    "type": "boolean",
                    "title": "Use Sendonly Hold"
                  },
                  "sendCompactHdrs": {
                    "type": "boolean",
                    "title": "Send Compact Hdrs"
                  },
                  "msForking": {
                    "type": "boolean",
                    "title": "ms-forking"
                  },
                  "keepaliveSessionTimers": {
                    "type": "boolean",
                    "title": "Keepalive Session Timers"
                  },
                  "requestURIE164GlobalPrefix": {
                    "type": "boolean",
                    "title": "Request URI E164 Add Global Prefix"
                  }
                }
              },
              "callerId": {
                "type": "object",
                "title": "Caller ID",
                "properties": {
                  "sourcePreference": {
                    "type": "string",
                    "title": "Source Preference"
                  }
                }
              },
              "alertInformation": {
                "type": "object",
                "title": "Alert Information",
                "properties": {
                  "alertInfo#1Details": {
                    "type": "object",
                    "title": "Alert Info #1 Details",
                    "properties": {
                      "value": {
                        "type": "string",
                        "title": "Value"
                      },
                      "class": {
                        "type": "string",
                        "title": "Value",
                        "enum": ["Silent Ring", "Low Trill", "Low Double Trill", "Medium Trill", "Medium Double Trill", "High Trill", "High Double Trill", "Highest Trill", "Highest Double Trill", "Beeble", "Triplet", "Ringback-style"]
                      }
                    }
                  },
                  "alertInfo#2Details": {
                    "type": "object",
                    "title": "Alert Info #2 Details",
                    "properties": {
                      "value": {
                        "type": "string",
                        "title": "Value"
                      },
                      "class": {
                        "type": "string",
                        "title": "Value",
                        "enum": ["Silent Ring", "Low Trill", "Low Double Trill", "Medium Trill", "Medium Double Trill", "High Trill", "High Double Trill", "Highest Trill", "Highest Double Trill", "Beeble", "Triplet", "Ringback-style"]
                      }
                    }
                  }
                }
              },
              "requestValidation": {
                "type": "object",
                "title": "Request Validation",
                "properties": {
                  "eventTypeValidate": {
                    "type": "object",
                    "title": "Event Type to Validate",
                    "properties": {
                      "request": {
                        "type": "string",
                        "title": "Request"
                      },
                      "method": {
                        "type": "string",
                        "title": "Method"
                      },
                      "request1Event": {
                        "type": "string",
                        "title": "Request 1 Event"
                      }
                    }
                  },
                  "digest": {
                    "type": "object",
                    "title": "Digest",
                    "properties": {
                      "realm": {
                        "type": "string",
                        "title": "Realm"
                      }
                    }
                  },
                  "specialEvent": {
                    "type": "object",
                    "title": "Special Event",
                    "properties": {
                      "lineSeizenonStandard": {
                        "type": "boolean",
                        "title": "Line Seize non Standard"
                      },
                      "checkSyncAlwaysReboot": {
                        "type": "boolean",
                        "title": "CheckSync Always Reboot"
                      }
                    }
                  },
                  "conference": {
                    "type": "object",
                    "title": "Conference",
                    "properties": {
                      "address": {
                        "type": "string",
                        "title": "Address"
                      }
                    }
                  },
                  "dialog": {
                    "type": "object",
                    "title": "Dialog",
                    "properties": {
                      "useSdp": {
                        "type": "boolean",
                        "title": "Use SDP"
                      },
                      "usePValue": {
                        "type": "boolean",
                        "title": "Use P Value"
                      }
                    }
                  },
                  "connectionReuse": {
                    "type": "object",
                    "title": "Connection Reuse",
                    "properties": {
                      "useAlias": {
                        "type": "boolean",
                        "title": "Use Alias"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "sip_settings_options": {
    "helper": "SIP",
    "fields": {
      "settings": {
        "fields": {
          "sip": {
            "toolbarSticky": true,
            "fields": {
              "serverFeatureControl": {
                "helper": "Warning: Changing these values can cause server instability.",
                "fields": {
                  "serverBasedCallForwarding": {
                    "helper": "Enable or disable server-based call forwarding."
                  },
                  "serverBasedCallFrwdLocProcess": {
                    "helper": "Enable or disable local call forwarding behavior when server-based call forwarding is enabled."
                  },
                  "serverBasedDND": {
                    "helper": "Enable or disable server-based DND."
                  },
                  "serverBasedDNDLocProcess": {
                    "helper": "Enable or disable local DND behavior when server-based enabled."
                  }
                }
              },
              "port": {
                "fields": {
                  "localPort": {
                    "helper": "Local port for sending and receiving SIP signaling packets. If set to 0 or Null, 5060 is used for the local port but it is not advertised in the SIP signaling. If set to some other value, that value is used for the local port and it is advertised in the SIP signaling."
                  }
                }
              },
              "protocol": {
                "fields": {
                  "enableUaCSTA": {
                    "helper": "If checked, all lines will enable uaCSTA (User Agent Computer Supported Telecommunications Applications) by default. This value can be overridden for a particular line if desired."
                  },
                  "useRFC2543hold": {
                    "helper": "If checked, use the obsolete c=0.0.0.0 RFC2543 technique, otherwise, use SDP media direction attributes (such as a=sendonly) per RFC 3264 when initiating hold. In either case, the phone processes incoming hold signaling in either format."
                  },
                  "use486ForReject": {
                    "helper": "When the Reject softkey is pressed for an incoming call, use the 486 response code. (Otherwise the 603 response code is used.)"
                  },
                  "useContactUriTransfers": {
                    "helper": "Use the Contact URI when performing a transfer. (Otherwise the AOR is used.)"
                  },
                  "lcs": {
                    "helper": "If checked, the proprietary 'epid' parameter is added to the From field of all requests to support Windows Live Communications Server."
                  },
                  "useSendonlyHold": {
                    "helper": "If set to 1, the phone will send a reinvite with a stream mode attribute of 'sendonly' when a call is put on hold. This is the same as the previous behavior. If set to 0, the phone will send a reinvite with a stream mode attribute of 'inactive' when a call is put on hold. NOTE: The phone will ignore the value of this parameter if set to 1 when the parameter useRFC2543hold is also set to 1 (default is 0)."
                  },
                  "sendCompactHdrs": {
                    "helper": "If set to 0, SIP header names generated by the phone use the long form, for example 'From'. If set to 1, SIP header names generated by the phone use the short form, for example 'f'."
                  },
                  "msForking": {
                    "helper": "This parameter is only effective when an LCS server is being used. When checked, it is expected that the server will use aggregation to determine which end-point should receive an INVITE when multiple end-points share the same user credentials. The phone will also show support for ms-forking in its register request header and the phone will reject all INVITE messages which are for Instant messages to prevent the phone from instantly accepting instant message INVITEs which may be more suitable for a WM or OC endpoint instead."
                  }
                }
              },
              "callerId": {
                "fields": {
                  "sourcePreference": {
                    "helper": "Source of caller ID information. If Null, caller ID information comes from P-Asserted-Identity, Remote-Party-ID, From. For example, 'From,P-Asserted-Identity, Remote-Party-ID' and 'P-Asserted-Identity,From, Remote-Party-ID' are also valid."
                  }
                }
              },
              "alertInformation": {
                "helper": "Match incoming call's alert information to a particular ring response. NOTE: Currently only 2 alert types are supported",
                "fields": {
                  "alertInfo#1Details": {
                    "fields": {
                      "value": {
                        "helper": "Alert-Info fields from INVITE requests will be compared against with this value and if a match is found, the behavior described in the corresponding ring class will be applied."
                      },
                      "class": {
                        "helper": "'Ring class number' that identifies a configured ring type",
                        "removeDefaultNone": true
                      }
                    }
                  },
                  "alertInfo#2Details": {
                    "fields": {
                      "value": {
                        "helper": "Alert-Info fields from INVITE requests will be compared against with this value and if a match is found, the behavior described in the corresponding ring class will be applied."
                      },
                      "class": {
                        "helper": "'Ring class number' that identifies a configured ring type",
                        "removeDefaultNone": true
                      }
                    }
                  }
                }
              },
              "requestValidation": {
                "helper": "To guard against unauthorized callers or telephony events. NOTE: Currently only 1 event type is supported",
                "fields": {
                  "eventTypeValidate": {
                    "fields": {
                      "request": {
                        "helper": "One of: 'INVITE', 'ACK', 'BYE', 'REGISTER', 'CANCEL', 'OPTIONS', 'INFO', 'MESSAGE', 'SUBSCRIBE', 'NOTIFY', 'REFER', 'PRACK', or 'UPDATE'. Sets the name of the method for which validation will be applied. WARNING: Intensive request validation may have a negative performance impact due to the additional signaling required in some cases, therefore, use it judiciously."
                      },
                      "method": {
                        "helper": "Null or one of: 'source', 'digest' or 'both'/'all'. If Null, no validation is done. Otherwise this sets the type of validation performed for the request: source: ensure request is received from an IP address of a server belonging to the set of target registration servers; digest: challenge requests with digest authentication using the local credentials for the associated registration (line); both or all: apply both of the above methods"
                      },
                      "request1Event": {
                        "helper": "Determines which events specified with the Event header should be validated; only applicable when request is set to 'SUBSCRIBE' or 'NOTIFY'. If set to Null, all events will be validated."
                      }
                    }
                  },
                  "digest": {
                    "helper": "Credentials for incoming requests, if request validation is enabled.",
                    "fields": {
                      "realm": {
                        "helper": "Determines string used for Realm."
                      }
                    }
                  },
                  "specialEvent": {
                    "fields": {
                      "lineSeizenonStandard": {
                        "helper": "If checked, process a 200 OK response for a line-seize event SUBSCRIBE as though a line-seize NOTIFY with Subscription State: active header had been received, this speeds up processing."
                      },
                      "checkSyncAlwaysReboot": {
                        "helper": "If checked, always reboot when a NOTIFY message is received from the server with event equal to check-sync. If set to 0, only reboot if any of the files listed in [mac].cfg have changed on the FTP server when a NOTIFY message is received from the server with event equal to check-sync."
                      }
                    }
                  },
                  "conference": {
                    "fields": {
                      "address": {
                        "helper": "If Null, conferences are set up on the phone locally. If set to some value, conferences are set up by the server using the conferencing agent specified by this address. The acceptable values depend on the conferencing server implementation policy."
                      }
                    }
                  },
                  "dialog": {
                    "fields": {
                      "useSdp": {
                        "helper": "If checked, and the phone is put on hold the dialog shows the SDP in dialog. If unchecked, no SDP is sent and param {pname='+sip.rendering' pval='no'} is sent in dialog. NOTE: Default value for firmware 1.6.5 was checked."
                      },
                      "usePValue": {
                        "helper": "Unchecked value means phone uses pval field name in Dialog. This obeys the draft-ietf-sipping-dialog-package-06.txt draft. Some implementations require a field name of pvalue. This will be used when this is checked."
                      }
                    }
                  },
                  "connectionReuse": {
                    "fields": {
                      "useAlias": {
                        "helper": "If checked, use the connection reuse draft which introduces 'alias'."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "sipSettingsDhcp_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "sipSettingsDhcp": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "title": "Enabled"
              },
              "option": {
                "type": "number",
                "title": "Option"
              },
              "type": {
                "type": "string",
                "title": "Type",
                "enum": ["String", "IP Address"]
              }
            }
          }
        }
      }
    }
  },
  "sipSettingsDhcp_settings_options": {
    "helper": "SIP Settings in DHCP",
    "fields": {
      "settings": {
        "fields": {
          "sipSettingsDhcp": {
            "toolbarSticky": true,
            "helper": "Obtain SIP server IP address information from DHCP",
            "fields": {
              "enabled": {
                "helper": "Check with the DHCP server for SIP server IP address"
              },
              "option": {
                "helper": "If Enabled, the Option to request from the DHCP server if Allowable range is 128 to 255. There is no default value for this parameter, it must be filled in with a valid value."
              },
              "type": {
                "helper": "If Enabled, type to request from the DHCP server. There is no default value for this parameter, it must be filled in with a valid value.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "dialPlan_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "dialPlan": {
            "type": "object",
            "properties": {
              "ImpossibleMatchHandling": {
                "type": "string",
                "title": "Impossible Match Handling",
                "enum": ["allow user to dispatch", "give reorder tone", "send immediately"]
              },
              "removeEndOfDial": {
                "type": "boolean",
                "title": "Remove End of Dial"
              },
              "digitMap": {
                "type": "object",
                "title": "Digit Map",
                "properties": {
                  "digitmap": {
                    "type": "string",
                    "title": "digitmap"
                  },
                  "timeOut": {
                    "type": "number",
                    "title": "Time Out"
                  }
                }
              },
              "emergencyRouting": {
                "type": "object",
                "title": "Emergency Routing",
                "properties": {
                  "address": {
                    "type": "string",
                    "title": "Address"
                  },
                  "port": {
                    "type": "number",
                    "title": "Port"
                  },
                  "emergencyNumbers": {
                    "type": "number",
                    "title": "Emergency Numbers"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "dialPlan_settings_options": {
    "helper": "Dial Plan",
    "fields": {
      "settings": {
        "fields": {
          "dialPlan": {
            "toolbarSticky": true,
            "helper": "Dialplan for all lines on this phone. Each line may be configured independenty, see that lines settings.",
            "fields": {
              "ImpossibleMatchHandling": {
                "helper": "If 'send immediately', the digits entered up to and including the point where an impossible match occurred are sent to the server immediately. If 'give reorder tone', give reorder audible tone. If 'allow user to dispatch', allow user to accumulate digits and dispatch call manually with the Send soft key.",
                "removeDefaultNone": true
              },
              "removeEndOfDial": {
                "helper": "If checked, strip trailing # digit from digits sent out."
              },
              "digitMap": {
                "helper": "For default dialplan, set value to '[2-9]11|0T|100|101|011xxx.T|9011xxx.T|1[2-9]xxxxxxxxx|91[2-9]xxxxxxxxx|9[2-9]xxxxxx|*xx|[8]xxx|[2-7]xx'",
                "fields": {
                  "digitmap": {
                    "helper": "When this attribute is present, number-only dialing during the setup phase of new calls will be compared against the patterns therein and if a match is found, the call will be initiated automatically eliminating the need to press Send."
                  },
                  "timeOut": {
                    "helper": "Timeout in seconds for 'T' feature of digitmap."
                  }
                }
              },
              "emergencyRouting": {
                "fields": {
                  "address": {
                    "helper": "IP address or host name and port of a SIP server that will be used for routing emergency calls."
                  },
                  "emergencyNumbers": {
                    "helper": "This determines the URLs that should be watched for. When one of these defined URLs is detected as having been dialed by the user, the call will automatically be directed to the defined emergency server. When entering multiple URLs a comma MUST be used as the delimiter, as in the following example: 911,9911"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "localization_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "localization": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "title": "Language",
                "enum": [
                  "Chinese (China)",
                  "Danish (Denmark)",
                  "Dutch (Netherlands)",
                  "English (Canada)",
                  "English (Internal)",
                  "English (United Kingdom)",
                  "English (United States)",
                  "French (France)",
                  "German (Germany)",
                  "Italian (Italy)",
                  "Japanese (Japan)",
                  "Korean (Korea)",
                  "Norwegian (Norway)",
                  "Polish (Poland)",
                  "Portugues (Brazil)",
                  "Russian (Russia)",
                  "Slovenian (Slovenia)",
                  "Spanish (Spain)",
                  "Swedish (Sweden)"
                ]
              }
            }
          }
        }
      }
    }
  },
  "localization_settings_options": {
    "helper": "Localization",
    "fields": {
      "settings": {
        "fields": {
          "localization": {
            "toolbarSticky": true,
            "helper": "Dialplan for all lines on this phone. Each line may be configured independenty, see that lines settings.",
            "fields": {
              "language": {
                "helper": "Select the default language for the phone interface. Setting is harmless but ignored by Polycom 301s and only 450/550/560/650/670s can show Asian Languages. YOU MUST HAVE UPLOADED FIRMWARE TO SUPPORT DIFFERENT LANGUAGES. Navigate to Device/Files in administration console.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "messaging_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "messaging": {
            "type": "object",
            "properties": {
              "bypassInstantMessage": {
                "type": "boolean",
                "title": "Bypass Instant Message"
              }
            }
          }
        }
      }
    }
  },
  "messaging_settings_options": {
    "helper": "Messaging",
    "fields": {
      "settings": {
        "fields": {
          "messaging": {
            "toolbarSticky": true,
            "helper": "SoundPoint(R) IP supports message-waiting indication on a per-registration basis.",
            "fields": {
              "bypassInstantMessage": {
                "helper": "If checked, the display offering a choice of 'Message Center' and 'Instant Messages' will be bypassed when pressing the Messages key, the phone will act as if 'Message Center' was chosen. See 3.6.1 Voicemail Integration on page 49. Instant Messages will still be accessible from the Main Menu."
              }
            }
          }
        }
      }
    }
  },
  "nat_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "nat": {
            "type": "object",
            "properties": {
              "ip": {
                "type": "string",
                "title": "IP"
              },
              "sipSignalingPort": {
                "type": "number",
                "title": "SIP Signaling Port"
              },
              "mediaPortRangeStart": {
                "type": "number",
                "title": "Media Port Range Start"
              },
              "keepaliveInterval": {
                "type": "number",
                "title": "Keepalive Interval"
              }
            }
          }
        }
      }
    }
  },
  "nat_settings_options": {
    "helper": "NAT",
    "fields": {
      "settings": {
        "fields": {
          "nat": {
            "toolbarSticky": true,
            "helper": "These parameters define port and IP address changes used in NAT traversal. The port changes will change the port used by the phone, while the IP entry simply changes the IP advertised in the SIP signaling. This allows the use of simple NAT log.device.s that can redirect traffic, but do not allow for port mapping. For example, port 5432 on the NAT log.device. can be sent to port 5432 on an internal device, but not port 1234.",
            "fields": {
              "ip": {
                "helper": "IP address to advertise within SIP signaling, should match the external IP address used by the NAT log.device."
              },
              "sipSignalingPort": {
                "helper": "If non-Null, this port will be used by the phone for SIP signaling, overriding the value set for RTP Settings"
              },
              "mediaPortRangeStart": {
                "helper": "If non-Null, this attribute will be used to set the initially allocated RTP port, overriding the value set in RTP Settings."
              },
              "keepaliveInterval": {
                "helper": "The interval (in seconds) at which phones will send a keep-alive packet to the gateway/NAT log.device. to keep the communication port open. When set to 0 or empty the keep-alive packets are not sent."
              }
            }
          }
        }
      }
    }
  },
  "blf_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "blf": {
            "type": "object",
            "properties": {
              "subscriptionUrl": {
                "type": "string",
                "title": "Subscription URL"
              },
              "subscriptionServer": {
                "type": "string",
                "title": "Subscription Server",
                "enum": ["--disabled--", "Primary Registration Server", "Secondary Registration Server"]
              }
            }
          }
        }
      }
    }
  },
  "blf_settings_options": {
    "helper": "BLF",
    "fields": {
      "settings": {
        "fields": {
          "blf": {
            "toolbarSticky": true,
            "fields": {
              "subscriptionUrl": {
                "helper": "URL that publishes BLF events you wish to receive. It will generally be encoded with the user names or list names you wish to monitor."
              },
              "subscriptionServer": {
                "helper": "Server that accepts BLF SIP SUBSCRIBE events.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "roamingBuddies_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "roamingBuddies": {
            "type": "object",
            "properties": {
              "subscriptionServer": {
                "type": "string",
                "title": "Subscription URL",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              }
            }
          }
        }
      }
    }
  },
  "roamingBuddies_settings_options": {
    "helper": "Roaming Buddies",
    "fields": {
      "settings": {
        "fields": {
          "roamingBuddies": {
            "toolbarSticky": true,
            "fields": {
              "subscriptionServer": {
                "helper": "Server that accepts Roaming Buddies SIP SUBSCRIBE events.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "roamingPrivacy_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "roamingPrivacy": {
            "type": "object",
            "properties": {
              "subscriptionServer": {
                "type": "string",
                "title": "Subscription URL",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              }
            }
          }
        }
      }
    }
  },
  "roamingPrivacy_settings_options": {
    "helper": "Roaming Buddies",
    "fields": {
      "settings": {
        "fields": {
          "roamingPrivacy": {
            "toolbarSticky": true,
            "fields": {
              "subscriptionServer": {
                "helper": "Server that accepts Roaming Privacy SIP SUBSCRIBE events.",
                "removeDefaultNone": true
              }
            }
          }
        }
      }
    }
  },
  "networkConfiguration_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "networkConfiguration": {
            "type": "object",
            "properties": {
              "ethernet": {
                "type": "object",
                "title": "Ethernet",
                "properties": {
                  "overwrite": {
                    "type": "boolean",
                    "title": "Overwrite"
                  },
                  "vlanId": {
                    "type": "string",
                    "title": "VLAN ID"
                  },
                  "cdpCompatibility": {
                    "type": "boolean",
                    "title": "CDP Compatibility"
                  },
                  "ethernetStormFiltering": {
                    "type": "boolean",
                    "title": "Ethernet Storm Filtering"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "networkConfiguration_settings_options": {
    "helper": "Network Configuration",
    "fields": {
      "settings": {
        "fields": {
          "networkConfiguration": {
            "toolbarSticky": true,
            "fields": {
              "ethernet": {
                "fields": {
                  "overwrite": {
                    "helper": "Controls whether or not the existing Network Configuration settings on the phone are overwritten with the values below. If unchecked then these settings will not be applied to the phone. Otherwise all of these settings on the phone will be updated with the values below."
                  },
                  "vlanId": {
                    "helper": "Phone's 802.1Q VLAN identifier. Leave blank for no VLAN tagging."
                  },
                  "cdpCompatibility": {
                    "helper": "If enabled, the phone will use a CDP compatibility method. It also reports PoE power usage to the switch."
                  },
                  "ethernetStormFiltering": {
                    "helper": "Enables or disables Denial of Service (DoS) Storm Prevention Ethernet packet filtering on the phone to prevent TCP/IP stack overflows caused by invalid or excessive data. The default is enabled."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ldap_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "ldap": {
            "type": "object",
            "properties": {
              "serverAddress": {
                "type": "string",
                "title": "Server Address"
              },
              "port": {
                "type": "number",
                "title": "Port"
              },
              "autoQuerySubmitTimeout": {
                "type": "number",
                "title": "Auto Query Submit Timeout"
              },
              "backgroundSync": {
                "type": "boolean",
                "title": "Background Sync"
              },
              "backgroundSyncPeriod": {
                "type": "number",
                "title": "Background Sync Period"
              },
              "baseDn": {
                "type": "string",
                "title": "Base DN"
              },
              "bindOnInit": {
                "type": "boolean",
                "title": "Bind On Init"
              },
              "cacheSize": {
                "type": "number",
                "title": "Cache Size"
              },
              "domain": {
                "type": "string",
                "title": "Domain"
              },
              "filterPrefix": {
                "type": "string",
                "title": "Filter Prefix"
              },
              "pageSize": {
                "type": "number",
                "title": "Page Size"
              },
              "user": {
                "type": "string",
                "title": "User"
              },
              "password": {
                "type": "string",
                "title": "Password"
              },
              "scope": {
                "type": "string",
                "title": "Scope"
              },
              "transport": {
                "type": "string",
                "title": "Transport"
              },
              "viewPersistence": {
                "type": "boolean",
                "title": "View Persistence"
              },
              "searchAttributes": {
                "type": "object",
                "title": "Search Attributes",
                "properties": {
                  "1filter": {
                    "type": "string",
                    "title": "1. Filter"
                  },
                  "1label": {
                    "type": "string",
                    "title": "1. Label"
                  },
                  "1name": {
                    "type": "string",
                    "title": "1. Name"
                  },
                  "1searchable": {
                    "type": "boolean",
                    "title": "1. Searchable"
                  },
                  "1sticky": {
                    "type": "boolean",
                    "title": "1. Sticky"
                  },
                  "1type": {
                    "type": "string",
                    "title": "1. Type",
                    "enum": ["first_name", "last_name", "phone_number", "SIP_address", "H323_address", "URL", "OCS_address", "commUri", "other"]
                  },
                  "2filter": {
                    "type": "string",
                    "title": "2. Filter"
                  },
                  "2label": {
                    "type": "string",
                    "title": "2. Label"
                  },
                  "2name": {
                    "type": "string",
                    "title": "2. Name"
                  },
                  "2searchable": {
                    "type": "boolean",
                    "title": "2. Searchable"
                  },
                  "2sticky": {
                    "type": "boolean",
                    "title": "2. Sticky"
                  },
                  "2type": {
                    "type": "string",
                    "title": "2. Type",
                    "enum": ["first_name", "last_name", "phone_number", "SIP_address", "H323_address", "URL", "OCS_address", "commUri", "other"]
                  },
                  "3filter": {
                    "type": "string",
                    "title": "3. Filter"
                  },
                  "3label": {
                    "type": "string",
                    "title": "3. Label"
                  },
                  "3name": {
                    "type": "string",
                    "title": "3. Name"
                  },
                  "3searchable": {
                    "type": "boolean",
                    "title": "3. Searchable"
                  },
                  "3sticky": {
                    "type": "boolean",
                    "title": "3. Sticky"
                  },
                  "3type": {
                    "type": "string",
                    "title": "3. Type",
                    "enum": ["first_name", "last_name", "phone_number", "SIP_address", "H323_address", "URL", "OCS_address", "commUri", "other"]
                  }
                }
              },
              "vlv": {
                "type": "object",
                "title": "VLV",
                "properties": {
                  "allow": {
                    "type": "boolean",
                    "title": "Allow"
                  },
                  "sortOrder": {
                    "type": "string",
                    "title": "Sort Order"
                  }
                }
              },
              "auth": {
                "type": "object",
                "title": "Auth",
                "properties": {
                  "useLoginCredentials": {
                    "type": "boolean",
                    "title": "Use Login Credentials"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ldap_settings_options": {
    "helper": "LDAP",
    "fields": {
      "settings": {
        "fields": {
          "ldap": {
            "toolbarSticky": true,
            "fields": {
              "serverAddress": {
                "helper": "URL where the LDAP server is located"
              },
              "user":{
                "helper": "User name to bind to LDAP server"
              }
            }
          }
        }
      }
    }
  },
  "applications_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "applications": {
            "type": "object",
            "properties": {
              "push": {
                "type": "object",
                "title": "Push",
                "properties": {
                  "pushMessageType": {
                    "type": "string",
                    "title": "Push Message Type",
                    "enum": ["0", "1", "2", "3", "4", "5"]
                  },
                  "pushUser": {
                    "type": "string",
                    "title": "Push User"
                  },
                  "pushPassword": {
                    "type": "string",
                    "title": "Push Password"
                  }
                }
              },
              "statePolling": {
                "type": "object",
                "title": "State Polling",
                "properties": {
                  "responseMode": {
                    "type": "string",
                    "title": "Response Mode",
                    "enum": ["0", "1"]
                  },
                  "pollingUser": {
                    "type": "string",
                    "title": "Polling User"
                  },
                  "puPollingshPassword": {
                    "type": "string",
                    "title": "PuPollingsh Password"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "applications_settings_options": {
    "helper": "Applications",
    "fields": {
      "settings": {
        "fields": {
          "applications": {
            "toolbarSticky": true,
            "fields": {
              "push": {
                "fields": {
                  "pushMessageType": {
                    "removeDefaultNone": true,
                    "helper": "0: (None) Discard push messages 1: (Normal) Allows only Normal priority push messages 2: (Important) Allows only Important priority push messages 3: (High) Allows only High priority push messages 4: (Critical) Allows only Critical priority push 5: (All) Allows all push messages of any priority"
                  }
                }
              },
              "statePolling": {
                "fields": {
                  "responseMode": {
                    "removeDefaultNone": true,
                    "helper": "The mode of sending requested polled data. If 1, requested polled data is sent to a configured URL. If 0, the data is sent in the HTTP response back to the requestor."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "pushToTalkAndPagingGroups_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "pushToTalkAndPagingGroups": {
            "type": "object",
            "properties": {
              "multicastAddress": {
                "type": "string",
                "title": "Multicast Address"
              },
              "enableCallwaiting": {
                "type": "boolean",
                "title": "Enable Callwaiting"
              },
              "spectraLinkCompatibilityMode": {
                "type": "boolean",
                "title": "SpectraLink Compatibility Mode"
              },
              "emergencyChannelVolume": {
                "type": "number",
                "title": "Emergency Channel Volume"
              },
              "port": {
                "type": "number",
                "title": "Port"
              },
              "pushToTalkParameters": {
                "type": "object",
                "title": "Push-to-Talk Parameters",
                "properties": {
                  "enablePttMode": {
                    "type": "boolean",
                    "title": "Enable PTT Mode"
                  },
                  "allowOffhookPages":{
                    "type": "boolean",
                    "title": "Allow Offhook Pages"
                  },
                  "codec": {
                    "type": "string",
                    "title": "Codec",
                    "enum": ["G.711mu", "G.726QI", "G.722"]
                  },
                  "defaultChannel": {
                    "type": "number",
                    "title": "Default Channel"
                  },
                  "displayName": {
                    "type": "string",
                    "title": "Display Name"
                  },
                  "emergencyChannel": {
                    "type": "number",
                    "title": "Emergency Channel"
                  },
                  "payloadSize": {
                    "type": "number",
                    "title": "Payload Size"
                  },
                  "priorityChannel": {
                    "type": "number",
                    "title": "Priority Channel"
                  },
                  "channel1Available": {
                    "type": "boolean",
                    "title": "Channel 1 Available"
                  },
                  "channel1AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel1Label": {
                    "type": "string",
                    "title": "Channel 1 Label"
                  },
                  "subscribeToChannel1": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 1"
                  },
                  "channel2Available": {
                    "type": "boolean",
                    "title": "Channel 2 Available"
                  },
                  "channel2AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel2Label": {
                    "type": "string",
                    "title": "Channel 2 Label"
                  },
                  "subscribeToChannel2": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 2"
                  },
                  "channel3Available": {
                    "type": "boolean",
                    "title": "Channel 3 Available"
                  },
                  "channel3AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel3Label": {
                    "type": "string",
                    "title": "Channel 3 Label"
                  },
                  "subscribeToChannel3": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 3"
                  },
                  "channel4Available": {
                    "type": "boolean",
                    "title": "Channel 4 Available"
                  },
                  "channel4AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel4Label": {
                    "type": "string",
                    "title": "Channel 4 Label"
                  },
                  "subscribeToChannel4": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 4"
                  },
                  "channel5Available": {
                    "type": "boolean",
                    "title": "Channel 5 Available"
                  },
                  "channel5AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel5Label": {
                    "type": "string",
                    "title": "Channel 5 Label"
                  },
                  "subscribeToChannel5": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 5"
                  },
                  "channel6Available": {
                    "type": "boolean",
                    "title": "Channel 6 Available"
                  },
                  "channel6AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel6Label": {
                    "type": "string",
                    "title": "Channel 6 Label"
                  },
                  "subscribeToChannel6": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 6"
                  },
                  "channel7Available": {
                    "type": "boolean",
                    "title": "Channel 7 Available"
                  },
                  "channel7AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel7Label": {
                    "type": "string",
                    "title": "Channel 7 Label"
                  },
                  "subscribeToChannel7": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 7"
                  },
                  "channel8Available": {
                    "type": "boolean",
                    "title": "Channel 8 Available"
                  },
                  "channel8AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel8Label": {
                    "type": "string",
                    "title": "Channel 8 Label"
                  },
                  "subscribeToChannel8": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 8"
                  },
                  "channel9Available": {
                    "type": "boolean",
                    "title": "Channel 9 Available"
                  },
                  "channel9AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel9Label": {
                    "type": "string",
                    "title": "Channel 9 Label"
                  },
                  "subscribeToChannel9": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 9"
                  },
                  "channel10Available": {
                    "type": "boolean",
                    "title": "Channel 10 Available"
                  },
                  "channel10AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel10Label": {
                    "type": "string",
                    "title": "Channel 10 Label"
                  },
                  "subscribeToChannel10": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 10"
                  },
                  "channel11Available": {
                    "type": "boolean",
                    "title": "Channel 11 Available"
                  },
                  "channel11AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel11Label": {
                    "type": "string",
                    "title": "Channel 11 Label"
                  },
                  "subscribeToChannel11": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 11"
                  },
                  "channel12Available": {
                    "type": "boolean",
                    "title": "Channel 12 Available"
                  },
                  "channel12AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel12Label": {
                    "type": "string",
                    "title": "Channel 12 Label"
                  },
                  "subscribeToChannel12": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 12"
                  },
                  "channel13Available": {
                    "type": "boolean",
                    "title": "Channel 13 Available"
                  },
                  "channel13AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel13Label": {
                    "type": "string",
                    "title": "Channel 13 Label"
                  },
                  "subscribeToChannel13": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 13"
                  },
                  "channel14Available": {
                    "type": "boolean",
                    "title": "Channel 14 Available"
                  },
                  "channel14AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel14Label": {
                    "type": "string",
                    "title": "Channel 14 Label"
                  },
                  "subscribeToChannel14": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 14"
                  },
                  "channel15Available": {
                    "type": "boolean",
                    "title": "Channel 15 Available"
                  },
                  "channel15AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel15Label": {
                    "type": "string",
                    "title": "Channel 15 Label"
                  },
                  "subscribeToChannel15": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 15"
                  },
                  "channel16Available": {
                    "type": "boolean",
                    "title": "Channel 16 Available"
                  },
                  "channel16AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel16Label": {
                    "type": "string",
                    "title": "Channel 16 Label"
                  },
                  "subscribeToChannel16": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 16"
                  },
                  "channel17Available": {
                    "type": "boolean",
                    "title": "Channel 17 Available"
                  },
                  "channel17AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel17Label": {
                    "type": "string",
                    "title": "Channel 17 Label"
                  },
                  "subscribeToChannel17": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 17"
                  },
                  "channel18Available": {
                    "type": "boolean",
                    "title": "Channel 18 Available"
                  },
                  "channel18AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel18Label": {
                    "type": "string",
                    "title": "Channel 18 Label"
                  },
                  "subscribeToChannel18": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 18"
                  },
                  "channel19Available": {
                    "type": "boolean",
                    "title": "Channel 19 Available"
                  },
                  "channel19AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel19Label": {
                    "type": "string",
                    "title": "Channel 19 Label"
                  },
                  "subscribeToChannel19": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 19"
                  },
                  "channel20Available": {
                    "type": "boolean",
                    "title": "Channel 20 Available"
                  },
                  "channel20AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel20Label": {
                    "type": "string",
                    "title": "Channel 20 Label"
                  },
                  "subscribeToChannel20": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 20"
                  },
                  "channel21Available": {
                    "type": "boolean",
                    "title": "Channel 21 Available"
                  },
                  "channel21AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel21Label": {
                    "type": "string",
                    "title": "Channel 21 Label"
                  },
                  "subscribeToChannel21": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 21"
                  },
                  "channel22Available": {
                    "type": "boolean",
                    "title": "Channel 22 Available"
                  },
                  "channel22AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel22Label": {
                    "type": "string",
                    "title": "Channel 22 Label"
                  },
                  "subscribeToChannel22": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 22"
                  },
                  "channel23Available": {
                    "type": "boolean",
                    "title": "Channel 23 Available"
                  },
                  "channel23AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel23Label": {
                    "type": "string",
                    "title": "Channel 23 Label"
                  },
                  "subscribeToChannel23": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 23"
                  },
                  "channel24Available": {
                    "type": "boolean",
                    "title": "Channel 24 Available"
                  },
                  "channel24AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel24Label": {
                    "type": "string",
                    "title": "Channel 24 Label"
                  },
                  "subscribeToChannel24": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 24"
                  },
                  "channel25Available": {
                    "type": "boolean",
                    "title": "Channel 25 Available"
                  },
                  "channel25AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "channel25Label": {
                    "type": "string",
                    "title": "Channel 25 Label"
                  },
                  "subscribeToChannel25": {
                    "type": "boolean",
                    "title": "Subscribe To Channel 25"
                  }
                }
              },
              "groupPagingParameters": {
                "type": "object",
                "title": "Group Paging Parameters",
                "properties": {
                  "enableGroupPaging": {
                    "type": "boolean",
                    "title": "Enable Group Paging"
                  },
                  "allowOffhookPages": {
                    "type": "boolean",
                    "title": "Allow Offhook Pages"
                  },
                  "codec": {
                    "type": "string",
                    "title": "Codec",
                    "enum": ["G.711mu", "G.726QI", "G.722"]
                  },
                  "defaultGroup": {
                    "type": "number",
                    "title": "Default Group"
                  },
                  "displayName": {
                    "type": "string",
                    "title": "Display Name"
                  },
                  "emergencyGroup": {
                    "type": "number",
                    "title": "Emergency Group"
                  },
                  "payloadSize": {
                    "type": "number",
                    "title": "Payload Size"
                  },
                  "priorityGroup": {
                    "type": "number",
                    "title": "Priority Group"
                  },
                  "transmitTimeoutContinuation": {
                    "type": "number",
                    "title": "Transmit Timeout Continuation"
                  },
                  "initialTimeout": {
                    "type": "number",
                    "title": "Initial timeout"
                  },
                  "group1Available": {
                    "type": "boolean",
                    "title": "Group 1 Available"
                  },
                  "group1AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group1Label": {
                    "type": "string",
                    "title": "Group 1 Label"
                  },
                  "subscribeToGroup1": {
                    "type": "boolean",
                    "title": "Subscribe To Group 1"
                  },
                  "group2Available": {
                    "type": "boolean",
                    "title": "Group 2 Available"
                  },
                  "group2AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group2Label": {
                    "type": "string",
                    "title": "Group 2 Label"
                  },
                  "subscribeToGroup2": {
                    "type": "boolean",
                    "title": "Subscribe To Group 2"
                  },
                  "group3Available": {
                    "type": "boolean",
                    "title": "Group 3 Available"
                  },
                  "group3AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group3Label": {
                    "type": "string",
                    "title": "Group 3 Label"
                  },
                  "subscribeToGroup3": {
                    "type": "boolean",
                    "title": "Subscribe To Group 3"
                  },
                  "group4Available": {
                    "type": "boolean",
                    "title": "Group 4 Available"
                  },
                  "group4AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group4Label": {
                    "type": "string",
                    "title": "Group 4 Label"
                  },
                  "subscribeToGroup4": {
                    "type": "boolean",
                    "title": "Subscribe To Group 4"
                  },
                  "group5Available": {
                    "type": "boolean",
                    "title": "Group 5 Available"
                  },
                  "group5AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group5Label": {
                    "type": "string",
                    "title": "Group 5 Label"
                  },
                  "subscribeToGroup5": {
                    "type": "boolean",
                    "title": "Subscribe To Group 5"
                  },
                  "group6Available": {
                    "type": "boolean",
                    "title": "Group 6 Available"
                  },
                  "group6AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group6Label": {
                    "type": "string",
                    "title": "Group 6 Label"
                  },
                  "subscribeToGroup6": {
                    "type": "boolean",
                    "title": "Subscribe To Group 6"
                  },
                  "group7Available": {
                    "type": "boolean",
                    "title": "Group 7 Available"
                  },
                  "group7AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group7Label": {
                    "type": "string",
                    "title": "Group 7 Label"
                  },
                  "subscribeToGroup7": {
                    "type": "boolean",
                    "title": "Subscribe To Group 7"
                  },
                  "group8Available": {
                    "type": "boolean",
                    "title": "Group 8 Available"
                  },
                  "group8AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group8Label": {
                    "type": "string",
                    "title": "Group 8 Label"
                  },
                  "subscribeToGroup8": {
                    "type": "boolean",
                    "title": "Subscribe To Group 8"
                  },
                  "group9Available": {
                    "type": "boolean",
                    "title": "Group 9 Available"
                  },
                  "group9AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group9Label": {
                    "type": "string",
                    "title": "Group 9 Label"
                  },
                  "subscribeToGroup9": {
                    "type": "boolean",
                    "title": "Subscribe To Group 9"
                  },
                  "group10Available": {
                    "type": "boolean",
                    "title": "Group 10 Available"
                  },
                  "group10AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group10Label": {
                    "type": "string",
                    "title": "Group 10 Label"
                  },
                  "subscribeToGroup10": {
                    "type": "boolean",
                    "title": "Subscribe To Group 10"
                  },
                  "group11Available": {
                    "type": "boolean",
                    "title": "Group 11 Available"
                  },
                  "group11AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group11Label": {
                    "type": "string",
                    "title": "Group 11 Label"
                  },
                  "subscribeToGroup11": {
                    "type": "boolean",
                    "title": "Subscribe To Group 11"
                  },
                  "group12Available": {
                    "type": "boolean",
                    "title": "Group 12 Available"
                  },
                  "group12AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group12Label": {
                    "type": "string",
                    "title": "Group 12 Label"
                  },
                  "subscribeToGroup12": {
                    "type": "boolean",
                    "title": "Subscribe To Group 12"
                  },
                  "group13Available": {
                    "type": "boolean",
                    "title": "Group 13 Available"
                  },
                  "group13AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group13Label": {
                    "type": "string",
                    "title": "Group 13 Label"
                  },
                  "subscribeToGroup13": {
                    "type": "boolean",
                    "title": "Subscribe To Group 13"
                  },
                  "group14Available": {
                    "type": "boolean",
                    "title": "Group 14 Available"
                  },
                  "group14AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group14Label": {
                    "type": "string",
                    "title": "Group 14 Label"
                  },
                  "subscribeToGroup14": {
                    "type": "boolean",
                    "title": "Subscribe To Group 14"
                  },
                  "group15Available": {
                    "type": "boolean",
                    "title": "Group 15 Available"
                  },
                  "group15AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group15Label": {
                    "type": "string",
                    "title": "Group 15 Label"
                  },
                  "subscribeToGroup15": {
                    "type": "boolean",
                    "title": "Subscribe To Group 15"
                  },
                  "group16Available": {
                    "type": "boolean",
                    "title": "Group 16 Available"
                  },
                  "group16AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group16Label": {
                    "type": "string",
                    "title": "Group 16 Label"
                  },
                  "subscribeToGroup16": {
                    "type": "boolean",
                    "title": "Subscribe To Group 16"
                  },
                  "group17Available": {
                    "type": "boolean",
                    "title": "Group 17 Available"
                  },
                  "group17AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group17Label": {
                    "type": "string",
                    "title": "Group 17 Label"
                  },
                  "subscribeToGroup17": {
                    "type": "boolean",
                    "title": "Subscribe To Group 17"
                  },
                  "group18Available": {
                    "type": "boolean",
                    "title": "Group 18 Available"
                  },
                  "group18AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group18Label": {
                    "type": "string",
                    "title": "Group 18 Label"
                  },
                  "subscribeToGroup18": {
                    "type": "boolean",
                    "title": "Subscribe To Group 18"
                  },
                  "group19Available": {
                    "type": "boolean",
                    "title": "Group 19 Available"
                  },
                  "group19AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group19Label": {
                    "type": "string",
                    "title": "Group 19 Label"
                  },
                  "subscribeToGroup19": {
                    "type": "boolean",
                    "title": "Subscribe To Group 19"
                  },
                  "group20Available": {
                    "type": "boolean",
                    "title": "Group 20 Available"
                  },
                  "group20AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group20Label": {
                    "type": "string",
                    "title": "Group 20 Label"
                  },
                  "subscribeToGroup20": {
                    "type": "boolean",
                    "title": "Subscribe To Group 20"
                  },
                  "group21Available": {
                    "type": "boolean",
                    "title": "Group 21 Available"
                  },
                  "group21AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group21Label": {
                    "type": "string",
                    "title": "Group 21 Label"
                  },
                  "subscribeToGroup21": {
                    "type": "boolean",
                    "title": "Subscribe To Group 21"
                  },
                  "group22Available": {
                    "type": "boolean",
                    "title": "Group 22 Available"
                  },
                  "group22AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group22Label": {
                    "type": "string",
                    "title": "Group 22 Label"
                  },
                  "subscribeToGroup22": {
                    "type": "boolean",
                    "title": "Subscribe To Group 22"
                  },
                  "group23Available": {
                    "type": "boolean",
                    "title": "Group 23 Available"
                  },
                  "group23AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group23Label": {
                    "type": "string",
                    "title": "Group 23 Label"
                  },
                  "subscribeToGroup23": {
                    "type": "boolean",
                    "title": "Subscribe To Group 23"
                  },
                  "group24Available": {
                    "type": "boolean",
                    "title": "Group 24 Available"
                  },
                  "group24AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group24Label": {
                    "type": "string",
                    "title": "Group 24 Label"
                  },
                  "subscribeToGroup24": {
                    "type": "boolean",
                    "title": "Subscribe To Group 24"
                  },
                  "group25Available": {
                    "type": "boolean",
                    "title": "Group 25 Available"
                  },
                  "group25AllowTransmit": {
                    "type": "boolean",
                    "title": "Allow Transmit"
                  },
                  "group25Label": {
                    "type": "string",
                    "title": "Group 25 Label"
                  },
                  "subscribeToGroup25": {
                    "type": "boolean",
                    "title": "Subscribe To Group 25"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "pushToTalkAndPagingGroups_settings_options": {
    "helper": "Push-To-Talk And Paging Groups",
    "fields": {
      "settings": {
        "fields": {
          "pushToTalkAndPagingGroups": {
            "toolbarSticky": true,
            "helper": "Group Paging enables you to broadcast one-way audio announcements to users who are subscribed to a specific page group. Push-to-Talk (PTT) is a collaborative tool typically used with wireless handset phones, enabling you to exchange broadcasts with users subscribed to a PTT channel, much like a walkie-talkie.",
            "fields": {
              "multicastAddress": {
                "helper": "The multicast IP address to send page audio to and receive page audio from."
              },
              "enableCallwaiting": {
                "helper": "If unchecked, incoming PTT sessions do not produce standard call waiting. If checked, incoming PTT sessions produce standard call waiting behavior on the active audio channel."
              },
              "spectraLinkCompatibilityMode": {
                "helper": "If unchecked, the PTT protocol behavior is not compatible with SpectraLink handset models 8020/8030 or older. If checked, all PTT protocol behavior is compatible with the older SpectraLink handsets, even if some configuration parameters are incompatible. For example, if this parameter is enabled and ptt.codec is set to G.722, the G.726QI codec will be used for outgoing PTT audio to maintain compatibility."
              },
              "emergencyChannelVolume": {
                "helper": "The volume of emergency pages and PTT broadcasts relative to the maximum speakerphone volume of the"
              },
              "port": {
                "helper": "The port to send audio to and receive audio from."
              },
              "pushToTalkParameters": {
                "helper": "The following parameters apply to PTT mode push-to-talk only.",
                "fields": {
                  "enablePttMode": {
                    "helper": "If unchecked, push-to-talk is disabled. If checked, push-to-talk is enabled."
                  },
                  "allowOffhookPages": {
                    "helper": "If unchecked, PTT broadcasts will not play out on the handset during an active call - except for Priority and Emergency pages. If checked, PTT broadcasts will play out on the handset during an active call."
                  },
                  "codec": {
                    "removeDefaultNone": true,
                    "helper": "The audio codec to use for outgoing PTT broadcasts. Incoming PTT audio will be decoded according to the codec specified in the incoming message."
                  },
                  "defaultChannel": {
                    "helper": "The PTT channel used to transmit an outgoing page if the user does not explicitly specify a channel."
                  },
                  "displayName": {
                    "helper": "This display name is shown in the caller ID field of outgoing pages. If Null, the value from reg.1.displayName will be used. If the reg.1 display name is also Null, the handset's MAC address will be used."
                  },
                  "emergencyChannel": {
                    "helper": "The channel assigned for emergency pages."
                  },
                  "payloadSize": {
                    "helper": "The audio payload size in milliseconds."
                  },
                  "priorityChannel": {
                    "helper": "The channel assigned for priority pages."
                  },
                  "channel1Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel1AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel1Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel1": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel2Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel2AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel2Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel2": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel3Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel3AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel3Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel3": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel4Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel4AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel4Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel4": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel5Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel5AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel5Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel5": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel6Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel6AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel6Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel6": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel7Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel7AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel7Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel7": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel8Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel8AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel8Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel8": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel9Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel9AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel9Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel9": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel10Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel10AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel10Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel10": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel11Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel11AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel11Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel11": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel12Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel12AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel12Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel12": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel13Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel13AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel13Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel13": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel14Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel14AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel14Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel14": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel15Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel15AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel15Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel15": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel16Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel16AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel16Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel16": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel17Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel17AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel17Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel17": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel18Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel18AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel18Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel18": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel19Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel19AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel19Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel19": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel20Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel20AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel20Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel20": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel21Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel21AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel21Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel21": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel22Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel22AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel22Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel22": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel23Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel23AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel23Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel23": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel24Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel24AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel24Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel24": {
                    "helper": "Subscribe the phone to the channel"
                  },
                  "channel25Available": {
                    "helper": "Make the channel available to the user"
                  },
                  "channel25AllowTransmit": {
                    "helper": "Allow outgoing broadcasts on the channel"
                  },
                  "channel25Label": {
                    "helper": "The label to identify the channel"
                  },
                  "subscribeToChannel25": {
                    "helper": "Subscribe the phone to the channel"
                  }
                }
              },
              "groupPagingParameters": {
                "helper": "The following parameters apply to page mode group paging only.",
                "fields": {
                  "allowOffhookPages": {
                    "helper": "The parameter related to the Accept While Busy setting. If unchecked, group pages will not play out on the handset during "
                  },
                  "codec": {
                    "removeDefaultNone": true,
                    "helper": "The audio codec to use for outgoing group pages. Incoming pages will be decoded according to the codec specified in the incoming message."
                  },
                  "defaultGroup": {
                    "helper": "The paging group used to transmit an outgoing page if the user does not explicitly specify a group."
                  },
                  "displayName": {
                    "helper": "This display name is shown in the caller ID field of outgoing pages. If Null, the value from reg.1.displayName will be used. If the reg.1 display name is also Null, the handset's MAC address will be used."
                  },
                  "emergencyGroup": {
                    "helper": "The paging group to use for emergency pages."
                  },
                  "payloadSize": {
                    "helper": "The audio payload size in milliseconds."
                  },
                  "priorityGroup": {
                    "helper": "The paging group to use for priority pages."
                  },
                  "transmitTimeoutContinuation": {
                    "helper": "The time (in seconds) to add to the initial timeout for terminating page announcements. If this value is non-zero, an Extend soft key will display on the phone. Pressing the Extend soft key continues the initial timeout for the time specified by this parameter. If 0, announcements cannot be extended."
                  },
                  "initialTimeout": {
                    "helper": "The number of seconds to wait before automatically terminating an outgoing page announcement. If 0, page announcements will not automatically terminate and will continue until they are manually ended."
                  },
                  "group1Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group1AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group1Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup1": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group2Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group2AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group2Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup2": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group3Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group3AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group3Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup3": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group4Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group4AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group4Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup4": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group5Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group5AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group5Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup5": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group6Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group6AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group6Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup6": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group7Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group7AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group7Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup7": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group8Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group8AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group8Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup8": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group9Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group9AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group9Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup9": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group10Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group10AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group10Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup10": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group11Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group11AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group11Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup11": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group12Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group12AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group12Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup12": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group13Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group13AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group13Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup13": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group14Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group14AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group14Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup14": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group15Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group15AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group15Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup15": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group16Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group16AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group16Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup16": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group17Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group17AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group17Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup17": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group18Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group18AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group18Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup18": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group19Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group19AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group19Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup19": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group20Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group20AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group20Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup20": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group21Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group21AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group21Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup21": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group22Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group22AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group22Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup22": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group23Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group23AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group23Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup23": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group24Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group24AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group24Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup24": {
                    "helper": "Subscribe the phone to the group"
                  },
                  "group25Available": {
                    "helper": "Make the group available to the user"
                  },
                  "group25AllowTransmit": {
                    "helper": "Allow outgoing announcements to the group"
                  },
                  "group25Label": {
                    "helper": "The label to identify the group"
                  },
                  "subscribeToGroup25": {
                    "helper": "Subscribe the phone to the group"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "deviceBackground_settings_schema": {
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "deviceBackground": {
            "type": "object",
            "properties": {
              "backgroundPolycomVvx310/300": {
                "type": "object",
                "title": "Background Polycom VVX 310/300",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  }
                }
              },
              "backgroundPolycomVvx500/410/400": {
                "type": "object",
                "title": "Background Polycom VVX 500/410/400",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  }
                }
              },
              "backgroundPolycomVvx600": {
                "type": "object",
                "title": "Background Polycom VVX 600",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  }
                }
              },
              "backgroundPolycomVvx1500": {
                "type": "object",
                "title": "Background Polycom VVX 1500",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  }
                }
              },
              "backgroundPolycomSoundPointIP450": {
                "type": "object",
                "title": "Background Polycom SoundPoint IP 450",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  },
                  "adjust": {
                    "type": "number",
                    "title": "Adjust"
                  }
                }
              },
              "backgroundPolycomSoundPointIP550": {
                "type": "object",
                "title": "Background Polycom SoundPoint IP 550",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  },
                  "adjust": {
                    "type": "number",
                    "title": "Adjust"
                  }
                }
              },
              "backgroundPolycomSoundPointIP670/650": {
                "type": "object",
                "title": "Background Polycom SoundPoint IP 670/650",
                "properties": {
                  "enableDisableBackgroundConfig": {
                    "type": "boolean",
                    "title": "Enable/Disable Background Configuration"
                  },
                  "selection": {
                    "type": "number",
                    "title": "Selection"
                  },
                  "backgroundExpansionModule": {
                    "type": "string",
                    "title": "Background Expansion Module"
                  },
                  "backgroundPhone": {
                    "type": "string",
                    "title": "Background Phone"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "deviceBackground_settings_options": {
    "helper": "Device Background",
    "fields": {
      "settings": {
        "fields": {
          "deviceBackground": {
            "toolbarSticky": true,
            "fields": {
              "backgroundPolycomVvx310/300": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomVvx500/410/400": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomVvx600": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomVvx1500": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomSoundPointIP450": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomSoundPointIP550": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              },
              "backgroundPolycomSoundPointIP670/650": {
                "fields": {
                  "enableDisableBackgroundConfig": {
                    "helper": "This affects only the provisioning"
                  },
                  "backgroundExpansionModule": {
                    "helper": "For first Expansion Module"
                  },
                  "backgroundPhone": {
                    "helper": "For Main Screen"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "hoteling_settings_schema":{
    "type": "object",
    "properties": {
      "settings": {
        "type": "object",
        "properties": {
          "hoteling": {
            "type": "object",
            "properties": {
              "loginProvisioning": {
                "type": "object",
                "title": "Login Provisioning",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "title": "Enabled"
                  },
                  "persistent": {
                    "type": "boolean",
                    "title": "Persistent"
                  },
                  "loginRequired": {
                    "type": "boolean",
                    "title": "Login Required"
                  },
                  "flushPassword": {
                    "type": "boolean",
                    "title": "Flush Password"
                  },
                  "automaticLogOut": {
                    "type": "number",
                    "title": "Automatic Log Out"
                  }
                }
              },
              "provisioningType": {
                "type": "object",
                "title": "Provisioning Type",
                "properties": {
                  "setHotelingServerType": {
                    "type": "boolean",
                    "title": "Set Hoteling Server Type"
                  },
                  "hotelingServerTypeProtocol": {
                    "type": "string",
                    "title": "Hoteling Server Type Protocol",
                    "enum": ["FTP", "TFTP", "HTTP", "HTTPS", "FTPS"]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "hoteling_settings_options": {
    "helper": "Hoteling",
    "fields": {
      "settings": {
        "fields": {
          "hoteling": {
            "helper": "The Hoteling (User Profiles) feature enables users to access their personal phone settings from any phone in the organization.",
            "toolbarSticky": true,
            "fields": {
              "loginProvisioning": {
                "fields": {
                  "persistent": {
                    "helper": "If unchecked, users are logged out if the handset reboots. If checked, users remain logged in when the phone reboots."
                  },
                  "flushPassword": {
                    "helper": "If checked, when a user logs in or logs out, the login credential password is reset. If unchecked, the login credential password is not reset."
                  },
                  "automaticLogOut": {
                    "helper": "The time (in minutes) before a non-default user is automatically logged out of the handset. If 0, the user is not automatically logged out."
                  }
                }
              },
              "provisioningType": {
                "fields": {
                  "hotelingServerTypeProtocol": {
                    "removeDefaultNone": true
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "settings_defaults": {
    "model": "PolycomVVX400",
    "settings": {
      "dateTimeSettings": {
        "dateFormat": {
          "format": "D,Md",
          "dateLongFormat": true,
          "dateTop": true
        }
      },
      "userPreferences": {
        "handsfreeMode": true,
        "oneTouchVoiceMail": true,
        "welcomeSoundEnabled": true,
        "localClockEnabled": true,
        "idleTimeout": 40
      },
      "dtmf": {
        "level": -15,
        "onTime": 50,
        "offTime": 50,
        "viaRtp": true,
        "rfc2833Control": true,
        "rfc2833Payload": 101
      },
      "soundEffects": {
        "stutterOnVoiceMail": true,
        "appLocalEnabled": true,
        "messageWaitingType": "Silence",
        "callWaitingType": "Chord",
        "callWaitingValue": "callWaiting",
        "longCallWaitingType1": "Chord",
        "longCallWaitingValue1": "callWaitingLong",
        "longCallWaitingType2": "Silence",
        "longCallWaitingValue2": 150,
        "longCallWaitingType3": "Chord",
        "longCallWaitingValue3": 6
      },
      "voiceCodecs": {
        "codec": ["G.722", "G.722.1 (32 kbps)", "G7221_C.48kbps", "G729_AB", "G711_Mu"],
        "g711Mu_payloadSize": 20,
        "g711Mu_jitterBufferMin": 40,
        "g711Mu_jitterBufferShrink": 500,
        "g711Mu_jitterBufferMax": 160,
        "g711A_payloadSize": 20,
        "g711A_jitterBufferMin": 40,
        "g711A_jitterBufferShrink": 500,
        "g711A_jitterBufferMax": 160,
        "g729AB_payloadSize": 20,
        "g729AB_jitterBufferMin": 40,
        "g729AB_jitterBufferShrink": 500,
        "g729AB_jitterBufferMax": 160,
        "g722_payloadSize": 20,
        "g722_jitterBufferMin": 40,
        "g722_jitterBufferShrink": 1500,
        "g722_jitterBufferMax": 200,
        "iLBC_13_33kbpsPayloadSize":30,
        "iLBC_13_33kbpsBufferMin": 40,
        "iLBC_13_33kbpsBufferShrink":500,
        "iLBC_13_33kbpsBufferMax": 160,
        "iLBC_15_2kbpsPayloadSize":20,
        "iLBC_15_2kbpsBufferMin": 40,
        "iLBC_15_2kbpsBufferShrink":500,
        "iLBC_15_2kbpsBufferMax": 160,
        "persistHandsfree": true,
        "vadTresh": 15
      },
      "voiceQMonitoring": {
        "centralReportCollector": {
          "reportInterval": 20
        },
        "alertReports": {
          "mosLqAlertThreshold": 0,
          "mosLqCriticalAlertThreshold": 0,
          "oneWayDelayAlertThreshold": 0,
          "oneWayDelayCriticalAlertThreshold": 0
        },
        "reportCollectorServer": {
          "serverPort": 5060
        }
      },
      "qualityOfService": {
        "videoRtpUserPriority": 5,
        "callControlUserPriority": 5,
        "otherUserPriority": 2,
        "rtpMinDelay": true,
        "rtpMaxThroughput": true,
        "rtpPrecedence": 5,
        "callControlPrecedence": 3
      },
      "sntp": {
        "resyncPeriod": 86400,
        "address": "0.pool.ntp.org",
        "gmtOffset": -18000,
        "enableDST": true
      },
      "rtp": {
        "filterByIp": true,
        "forceSend": 0,
        "mediaPortRangeStart": 2222
      },
      "tcpKeepAlive": {
        "idleTransmitInterval": 30
      },
      "webServer": {
        "enabled": true,
        "configuration": {
          "enabled": true,
          "port": 80
        }
      },
      "callHandling": {
        "callWaitingRing": "beep",
        "rejectBusyOnDnd": true,
        "enableOnNotRegistered": true,
        "offeringTimeout": 60,
        "ringBackTimeout": 60,
        "lastCallReturnString": "*69",
        "callsPerLine": "24",
        "dialtoneTimeout": "60",
        "directedCallPickupString": "*78",
        "sharedLines": {
          "disableDivert": true,
          "seizeFailReorder": true
        }
      },
      "holdReminder": {
        "period": 60,
        "startDelay": 90
      },
      "directoryResources": {
        "readOnlyLocalResources": true,
        "volatileMemory": {
          "maxSizeKBytes": 200
        }
      },
      "presence": {
        "registrationServer": 1
      },
      "keys": {
        "scrollingTimeout": 1
      },
      "authentication": {
        "adminPswd": "4567",
        "userPswd": "4567"
      },
      "logging": {
        "logLevel": {
          "supportObjects": "Minor error",
          "application": "Minor error",
          "sip": "Minor error",
          "ssps": "Minor error",
          "pps": "Minor error",
          "network": "Minor error",
          "configuration": "Minor error",
          "cdp": "Minor error",
          "lldp": "Minor error",
          "pmt": "Minor error",
          "ares": "Minor error",
          "dns": "Minor error",
          "httpServer": "Minor error",
          "ramDisk": "Minor error",
          "copyUtilities": "Minor error",
          "schedLogs": "Minor error",
          "resourceFinder": "Minor error",
          "keyObserver": "Minor error",
          "logging": "Minor error",
          "curl": "Minor error",
          "rtos": "Minor error",
          "microBrowser": "Minor error",
          "idleBrowser": "Minor error",
          "ttrs": "Minor error",
          "usb": "Minor error",
          "srtp": "Minor error",
          "clink": "Minor error",
          "pnetm": "Minor error",
          "peer": "Minor error",
          "efk": "Minor error",
          "ldap": "Minor error",
          "cmr": "Minor error",
          "cmp": "Minor error",
          "usbio": "Minor error",
          "pres": "Minor error",
          "pwrsv": "Minor error",
          "poll": "Minor error",
          "push": "Minor error",
          "wmgr": "Minor error"
        },
        "syslog": {
          "transport": "TCP",
          "facility": 16,
          "renderLevel": "Debug only",
          "prependMac": "Enabled"
        },
        "ftpLogRendering": {
          "level": "High detail",
          "timeFormat": "Absolute time (seconds)",
          "fileSize": 16,
          "fileUploadPeriod": 172800,
          "fileUploadAppend": true,
          "logfileLimit": 512,
          "limitReachedAction": "Delete File"
        }
      },
      "security": {
        "passwordLength": {
          "admin": 1,
          "user": 2
        },
        "srtp": {
          "keyLifetime": 0
        }
      },
      "licence": {
        "pollingTime": "2:00"
      },
      "request": {
        "type": "call"
      },
      "features": {
        "directory": true,
        "callList": true,
        "ringDownload": true,
        "callListReceived": true,
        "callListPlaced": true,
        "callListMissed": true,
        "nwayConferencing": true,
        "callRecordingPlayback": true
      },
      "microBrowser": {
        "idleDisplay": {
          "refresh": 0
        },
        "main": {
          "statusbar": true
        }
      },
      "sipServers": {
        "outboundProxy": {
          "port": 5060,
          "transport": "TCPOnly"
        }
      },
      "sip": {
        "tcpFastFailover": true,
        "serverFeatureControl": {
          "serverBasedCallFrwdLocProcess": true,
          "serverBasedDNDLocProcess": true
        },
        "port": {
          "localPort": 0
        },
        "protocol": {
          "use486ForReject": true,
          "useSendonlyHold": true
        },
        "callerId": {
          "sourcePreference": "P-Asserted-Identity, Remote-Party-ID, From"
        },
        "alertInformation": {
          "alertInfo#1Details": {
            "value": "http://external.call",
            "class": "Low Trill"
          },
          "alertInfo#2Details": {
            "value": "http://internal.call",
            "class": "Low Trill"
          }
        },
        "requestValidation": {
          "digest": {
            "realm": "PolycomSPIP"
          },
          "specialEvent": {
            "lineSeizenonStandard": true
          }
        }
      },
      "sipSettingsDhcp": {
        "option": 128,
        "type": "String"
      },
      "dialPlan": {
        "ImpossibleMatchHandling": "allow user to dispatch",
        "removeEndOfDial": true,
        "emergencyRouting": {
          "port": 5060,
          "emergencyNumbers": 911
        }
      },
      "localization": {
        "language": "English (Internal)"
      },
      "nat": {
        "sipSignalingPort": 0,
        "mediaPortRangeStart": 0,
        "keepaliveInterval": 0
      },
      "blf": {
        "subscriptionServer": "Primary Registration Server"
      },
      "roamingBuddies": {
        "subscriptionServer": "0"
      },
      "roamingPrivacy": {
        "subscriptionServer": "0"
      },
      "networkConfiguration": {
        "ethernet": {
          "ethernetStormFiltering": true
        }
      },
      "ldap": {
        "port": 0,
        "autoQuerySubmitTimeout": 0,
        "backgroundSyncPeriod": 86400,
        "bindOnInit": true,
        "cacheSize": 128,
        "filterPrefix": "(objectclass=person)",
        "pageSize": 32,
        "scope": "sub",
        "transport": "TCP",
        "searchAttributes": {
          "1type": "first_name",
          "2type": "last_name",
          "3type": "phone_number"
        }
      },
      "applications": {
        "push": {
          "pushMessageType": "4"
        },
        "statePolling": {
          "responseMode": "0"
        }
      },
      "pushToTalkAndPagingGroups": {
        "multicastAddress": "224.000.001.116",
        "spectraLinkCompatibilityMode": true,
        "emergencyChannelVolume": -10,
        "port": 5001,
        "pushToTalkParameters": {
          "codec": "G.722",
          "defaultChannel": 1,
          "emergencyChannel": 25,
          "payloadSize": 20,
          "priorityChannel": 24,
          "channel1Available": true,
          "channel1AllowTransmit": true,
          "channel1Label": "All",
          "subscribeToChannel1": true,
          "channel2Available": true,
          "channel2AllowTransmit": true,
          "channel3Available": true,
          "channel3AllowTransmit": true,
          "channel4Available": true,
          "channel4AllowTransmit": true,
          "channel5Available": true,
          "channel5AllowTransmit": true,
          "channel6Available": true,
          "channel6AllowTransmit": true,
          "channel7Available": true,
          "channel7AllowTransmit": true,
          "channel8Available": true,
          "channel8AllowTransmit": true,
          "channel9Available": true,
          "channel9AllowTransmit": true,
          "channel10Available": true,
          "channel10AllowTransmit": true,
          "channel11Available": true,
          "channel11AllowTransmit": true,
          "channel12Available": true,
          "channel12AllowTransmit": true,
          "channel13Available": true,
          "channel13AllowTransmit": true,
          "channel14Available": true,
          "channel14AllowTransmit": true,
          "channel15Available": true,
          "channel15AllowTransmit": true,
          "channel16Available": true,
          "channel16AllowTransmit": true,
          "channel17Available": true,
          "channel17AllowTransmit": true,
          "channel18Available": true,
          "channel18AllowTransmit": true,
          "channel19Available": true,
          "channel19AllowTransmit": true,
          "channel20Available": true,
          "channel20AllowTransmit": true,
          "channel21Available": true,
          "channel21AllowTransmit": true,
          "channel22Available": true,
          "channel22AllowTransmit": true,
          "channel23Available": true,
          "channel23AllowTransmit": true,
          "channel24Available": true,
          "channel24AllowTransmit": true,
          "channel24Label": "Priority",
          "subscribeToChannel24": true,
          "channel25Available": true,
          "channel25AllowTransmit": true,
          "channel25Label": "Emergency",
          "subscribeToChannel25": true
        },
        "groupPagingParameters": {
          "codec": "G.722",
          "defaultGroup": 1,
          "emergencyGroup": 25,
          "payloadSize": 20,
          "priorityGroup": 24,
          "transmitTimeoutContinuation": 60,
          "initialTimeout": 0,
          "group1Available": true,
          "group1AllowTransmit": true,
          "subscribeToGroup1": true,
          "group2Available": true,
          "group2AllowTransmit": true,
          "group3Available": true,
          "group3AllowTransmit": true,
          "group4Available": true,
          "group4AllowTransmit": true,
          "group5Available": true,
          "group5AllowTransmit": true,
          "group6Available": true,
          "group6AllowTransmit": true,
          "group7Available": true,
          "group7AllowTransmit": true,
          "group8Available": true,
          "group8AllowTransmit": true,
          "group9Available": true,
          "group9AllowTransmit": true,
          "group10Available": true,
          "group10AllowTransmit": true,
          "group11Available": true,
          "group11AllowTransmit": true,
          "group12Available": true,
          "group12AllowTransmit": true,
          "group13Available": true,
          "group13AllowTransmit": true,
          "group14Available": true,
          "group14AllowTransmit": true,
          "group15Available": true,
          "group15AllowTransmit": true,
          "group16Available": true,
          "group16AllowTransmit": true,
          "group17Available": true,
          "group17AllowTransmit": true,
          "group18Available": true,
          "group18AllowTransmit": true,
          "group19Available": true,
          "group19AllowTransmit": true,
          "group20Available": true,
          "group20AllowTransmit": true,
          "group21Available": true,
          "group21AllowTransmit": true,
          "group22Available": true,
          "group22AllowTransmit": true,
          "group23Available": true,
          "group23AllowTransmit": true,
          "group24Available": true,
          "group24AllowTransmit": true,
          "group24Label": "Priority",
          "subscribeToGroup24": true,
          "group25Available": true,
          "group25AllowTransmit": true,
          "group25Label": "Emergency",
          "subscribeToGroup25": true
        }
      },
      "deviceBackground": {
        "backgroundPolycomVvx310/300":{
          "enableDisableBackgroundConfig": true,
          "selection": 2.1,
          "backgroundExpansionModule": "ezLogo208x104.jpg",
          "backgroundPhone": "ezLogo208x104.jpg"
        },
        "backgroundPolycomVvx500/410/400":{
          "enableDisableBackgroundConfig": true,
          "selection": 2.1,
          "backgroundExpansionModule": "ezLogo320x240.jpg",
          "backgroundPhone": "ezLogo320x240.jpg"
        },
        "backgroundPolycomVvx600":{
          "enableDisableBackgroundConfig": true,
          "selection": 2.1,
          "backgroundExpansionModule": "ezLogo480x272.jpg",
          "backgroundPhone": "ezLogo480x272.jpg"
        },
        "backgroundPolycomVvx1500":{
          "enableDisableBackgroundConfig": true,
          "selection": 2.1,
          "backgroundExpansionModule": "ezLogo800x480.jpg",
          "backgroundPhone": "ezLogo800x480.jpg"
        },
        "backgroundPolycomSoundPointIP450":{
          "enableDisableBackgroundConfig": true,
          "selection": 3.1,
          "backgroundPhone": "ezLogo250x116.jpg",
          "adjust": -6
        },
        "backgroundPolycomSoundPointIP550":{
          "enableDisableBackgroundConfig": true,
          "selection": 3.1,
          "backgroundExpansionModule": "ezLogo320x160.jpg",
          "backgroundPhone": "ezLogo320x160.jpg",
          "adjust": -6
        },
        "backgroundPolycomSoundPointIP670/650":{
          "enableDisableBackgroundConfig": true,
          "selection": 3.1,
          "backgroundExpansionModule": "ezLogo320x160.jpg",
          "backgroundPhone": "ezLogo320x160.jpg"
        }
      },
      "hoteling": {
        "loginProvisioning": {
          "persistent": true,
          "flushPassword": true,
          "automaticLogOut": 0
        },
        "provisioningType": {
          "hotelingServerTypeProtocol": "HTTP"
        }
      }
    }
  }
}